/// <reference types="react" />
/// <reference types="ramda" />
import { Target } from './getValue';
export declare type InputProps = {
    name: string;
    value: any;
    checked?: boolean;
    onChange: (ev: React.SyntheticEvent<Target>) => void;
    onFocus: (ev: React.SyntheticEvent<Target>) => void;
    onBlur: (ev: React.SyntheticEvent<Target>) => void;
};
export declare type MetaProps = {
    error: string | null;
    dirty: boolean;
    touched: boolean;
    visited: boolean;
    active: boolean;
};
export declare type All<T> = T & InputProps & MetaProps;
export declare type SeparatedProps<T> = {
    input: InputProps;
    meta: MetaProps;
    rest: T;
};
export declare type InputProp = 'checked' | 'name' | 'value' | 'onChange' | 'onFocus' | 'onBlur';
export declare type MetaProp = 'active' | 'dirty' | 'error' | 'touched' | 'visited';
declare const _default: <T>(all: All<T>) => SeparatedProps<T>;
export default _default;
export declare const boolField: <T>(value: T) => T;
