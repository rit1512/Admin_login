'use strict';

exports.__esModule = true;
exports.boolField = undefined;

var _lensProp = require('ramda/src/lensProp');

var _lensProp2 = _interopRequireDefault(_lensProp);

var _over = require('ramda/src/over');

var _over2 = _interopRequireDefault(_over);

var _omit = require('ramda/src/omit');

var _omit2 = _interopRequireDefault(_omit);

var _pick = require('ramda/src/pick');

var _pick2 = _interopRequireDefault(_pick);

var _merge = require('ramda/src/merge');

var _merge2 = _interopRequireDefault(_merge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var INPUT_PROPS = ['checked', 'name', 'value', 'onChange', 'onFocus', 'onBlur'];
var META_PROPS = ['active', 'dirty', 'error', 'touched', 'visited'];
var IGNORE_PROPS = [].concat(INPUT_PROPS, META_PROPS, ['validate', 'normalize', 'defaultValue', '_form', '_addField', '_fieldChange', '_fieldFocus', '_fieldBlur']);
var maybeCheckProps = function maybeCheckProps(all) {
    if (typeof all.value === 'boolean') {
        return (0, _merge2.default)(all, { checked: all.value });
    }
    return all;
};
var separateProps = function separateProps(all) {
    return {
        input: (0, _pick2.default)(INPUT_PROPS, all),
        meta: (0, _pick2.default)(META_PROPS, all),
        rest: (0, _omit2.default)(IGNORE_PROPS, all)
    };
};

exports.default = function (all) {
    return separateProps(maybeCheckProps(all));
};

var boolField = exports.boolField = (0, _over2.default)((0, _lensProp2.default)('_field'), Boolean);