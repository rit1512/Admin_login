'use strict';

var _getValue = require('../getValue');

var _getValue2 = _interopRequireDefault(_getValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var preventDefault = function preventDefault(id) {
    return id;
};
var stopPropagation = function stopPropagation(id) {
    return id;
};
var evValue = function evValue(value) {
    return {
        preventDefault: preventDefault,
        stopPropagation: stopPropagation,
        target: {
            type: 'text',
            value: value
        }
    };
};
var evChecked = function evChecked(checked) {
    return {
        preventDefault: preventDefault,
        stopPropagation: stopPropagation,
        target: {
            type: 'checkbox',
            checked: checked
        }
    };
};
var evFiles = function evFiles(files) {
    return {
        preventDefault: preventDefault,
        stopPropagation: stopPropagation,
        target: {
            type: 'file',
            files: files
        }
    };
};
var evSelect = function evSelect(options) {
    return {
        preventDefault: preventDefault,
        stopPropagation: stopPropagation,
        target: {
            type: 'select-multiple',
            options: options
        }
    };
};
describe('#getValue', function () {
    it('should return value for non-event values', function () {
        expect((0, _getValue2.default)(null)).toBeNull();
        expect((0, _getValue2.default)('kek')).toBe('kek');
        expect((0, _getValue2.default)(true)).toBe(true);
        expect((0, _getValue2.default)(false)).toBe(false);
    });
    it('should return value for value', function () {
        expect((0, _getValue2.default)(evValue(null))).toBeNull();
        expect((0, _getValue2.default)(evValue(undefined))).toBeUndefined();
        expect((0, _getValue2.default)(evValue(1337))).toBe(1337);
        expect((0, _getValue2.default)(evValue('y u do dis'))).toBe('y u do dis');
    });
    it('should return checked for checkbox', function () {
        expect((0, _getValue2.default)(evChecked(true))).toBe(true);
        expect((0, _getValue2.default)(evChecked(false))).toBe(false);
    });
    it('should return files for files', function () {
        var files = ['lol', 'kek', 'bur'];
        expect((0, _getValue2.default)(evFiles(files))).toEqual(files);
    });
    it('should return options for select-multiple', function () {
        var options = [{ selected: false, value: 'lol' }, { selected: true, value: 'kek' }, { selected: false, value: 'bur' }];
        expect((0, _getValue2.default)(evSelect(options))).toEqual(['kek']);
        expect((0, _getValue2.default)(evSelect([]))).toEqual([]);
    });
});