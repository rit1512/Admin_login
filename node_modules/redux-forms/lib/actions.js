'use strict';

exports.__esModule = true;
var ADD_FORM = exports.ADD_FORM = '@@redux-forms/ADD_FORM';
var REMOVE_FORM = exports.REMOVE_FORM = '@@redux-forms/REMOVE_FORM';
var ADD_FIELD = exports.ADD_FIELD = '@@redux-forms/ADD_FIELD';
var REMOVE_FIELD = exports.REMOVE_FIELD = '@@redux-forms/REMOVE_FIELD';
var TOUCH_ALL = exports.TOUCH_ALL = '@@redux-forms/TOUCH_ALL';
var SUBMIT_START = exports.SUBMIT_START = '@@redux-forms/SUBMIT_START';
var SUBMIT_STOP = exports.SUBMIT_STOP = '@@redux-forms/SUBMIT_STOP';
var ADD_ARRAY = exports.ADD_ARRAY = '@@redux-forms/ADD_ARRAY';
var REMOVE_ARRAY = exports.REMOVE_ARRAY = '@@redux-forms/REMOVE_ARRAY';
var ARRAY_PUSH = exports.ARRAY_PUSH = '@@redux-forms/ARRAY_PUSH';
var ARRAY_POP = exports.ARRAY_POP = '@@redux-forms/ARRAY_POP';
var ARRAY_UNSHIFT = exports.ARRAY_UNSHIFT = '@@redux-forms/ARRAY_UNSHIFT';
var ARRAY_SHIFT = exports.ARRAY_SHIFT = '@@redux-forms/ARRAY_SHIFT';
var ARRAY_INSERT = exports.ARRAY_INSERT = '@@redux-forms/ARRAY_INSERT';
var ARRAY_REMOVE = exports.ARRAY_REMOVE = '@@redux-forms/ARRAY_REMOVE';
var ARRAY_SWAP = exports.ARRAY_SWAP = '@@redux-forms/ARRAY_SWAP';
var ARRAY_MOVE = exports.ARRAY_MOVE = '@@redux-forms/ARRAY_MOVE';
var FIELD_CHANGE = exports.FIELD_CHANGE = '@@redux-forms/FIELD_CHANGE';
var FIELD_FOCUS = exports.FIELD_FOCUS = '@@redux-forms/FIELD_FOCUS';
var FIELD_BLUR = exports.FIELD_BLUR = '@@redux-forms/FIELD_BLUR';
var FIELD_VALUE = exports.FIELD_VALUE = '@@redux-forms/FIELD_VALUE';
var FIELD_ERROR = exports.FIELD_ERROR = '@@redux-forms/FIELD_ERROR';
var FIELD_DIRTY = exports.FIELD_DIRTY = '@@redux-forms/FIELD_DIRTY';
var addForm = exports.addForm = function addForm(name) {
    return {
        type: ADD_FORM,
        payload: { name: name }
    };
};
var removeForm = exports.removeForm = function removeForm(name) {
    return {
        type: REMOVE_FORM,
        payload: { name: name }
    };
};
var addField = exports.addField = function addField(form, id, field) {
    return {
        type: ADD_FIELD,
        payload: { form: form, id: id, field: field }
    };
};
var removeField = exports.removeField = function removeField(form, id) {
    return {
        type: REMOVE_FIELD,
        payload: { form: form, id: id }
    };
};
var touchAll = exports.touchAll = function touchAll(form) {
    return {
        type: TOUCH_ALL,
        payload: { form: form }
    };
};
var submitStart = exports.submitStart = function submitStart(form) {
    return {
        type: SUBMIT_START,
        payload: { form: form }
    };
};
var submitStop = exports.submitStop = function submitStop(form) {
    return {
        type: SUBMIT_STOP,
        payload: { form: form }
    };
};
var addArray = exports.addArray = function addArray(form, id) {
    return {
        type: ADD_ARRAY,
        payload: { form: form, id: id }
    };
};
var removeArray = exports.removeArray = function removeArray(form, id) {
    return {
        type: REMOVE_ARRAY,
        payload: { form: form, id: id }
    };
};
var arrayPush = exports.arrayPush = function arrayPush(form, id) {
    return {
        type: ARRAY_PUSH,
        payload: { form: form, id: id }
    };
};
var arrayPop = exports.arrayPop = function arrayPop(form, id) {
    return {
        type: ARRAY_POP,
        payload: { form: form, id: id }
    };
};
var arrayUnshift = exports.arrayUnshift = function arrayUnshift(form, id) {
    return {
        type: ARRAY_UNSHIFT,
        payload: { form: form, id: id }
    };
};
var arrayShift = exports.arrayShift = function arrayShift(form, id) {
    return {
        type: ARRAY_SHIFT,
        payload: { form: form, id: id }
    };
};
var arrayInsert = exports.arrayInsert = function arrayInsert(form, id, index) {
    return {
        type: ARRAY_INSERT,
        payload: { form: form, id: id, index: index }
    };
};
var arrayRemove = exports.arrayRemove = function arrayRemove(form, id, index) {
    return {
        type: ARRAY_REMOVE,
        payload: { form: form, id: id, index: index }
    };
};
var arraySwap = exports.arraySwap = function arraySwap(form, id, index1, index2) {
    return {
        type: ARRAY_SWAP,
        payload: { form: form, id: id, index1: index1, index2: index2 }
    };
};
var arrayMove = exports.arrayMove = function arrayMove(form, id, from, to) {
    return {
        type: ARRAY_MOVE,
        payload: { form: form, id: id, from: from, to: to }
    };
};
var fieldChange = exports.fieldChange = function fieldChange(form, field, value, error, dirty) {
    return {
        type: FIELD_CHANGE,
        payload: { form: form, field: field, value: value, error: error, dirty: dirty }
    };
};
var fieldFocus = exports.fieldFocus = function fieldFocus(form, field) {
    return {
        type: FIELD_FOCUS,
        payload: { form: form, field: field }
    };
};
var fieldBlur = exports.fieldBlur = function fieldBlur(form, field, value, error, dirty) {
    return {
        type: FIELD_BLUR,
        payload: { form: form, field: field, value: value, error: error, dirty: dirty }
    };
};
var fieldValue = exports.fieldValue = function fieldValue(form, field, value) {
    return {
        type: FIELD_VALUE,
        payload: { form: form, field: field, value: value }
    };
};
var fieldError = exports.fieldError = function fieldError(form, field, error) {
    return {
        type: FIELD_ERROR,
        payload: { form: form, field: field, error: error }
    };
};
var fieldDirty = exports.fieldDirty = function fieldDirty(form, field, dirty) {
    return {
        type: FIELD_DIRTY,
        payload: { form: form, field: field, dirty: dirty }
    };
};