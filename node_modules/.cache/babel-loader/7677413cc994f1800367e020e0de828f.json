{"ast":null,"code":"import _classCallCheck from \"/home/apsit/Desktop/distributionManagementSystem/Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/apsit/Desktop/distributionManagementSystem/Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as jwt from 'jsonwebtoken';\nimport * as moment from 'moment';\n\nvar AuthService =\n/*#__PURE__*/\nfunction () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n\n    this.tokenKey = 'tokenKey';\n  }\n\n  _createClass(AuthService, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return localStorage.getItem(this.tokenKey);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(token) {\n      return jwt.decode(token);\n    }\n  }, {\n    key: \"saveToken\",\n    value: function saveToken(token) {\n      localStorage.setItem(this.tokenKey, token);\n    }\n  }, {\n    key: \"invalidateUser\",\n    value: function invalidateUser() {\n      localStorage.removeItem(this.tokenKey);\n    }\n  }, {\n    key: \"getExpiration\",\n    value: function getExpiration(token) {\n      var exp = this.decode(token).exp;\n      return moment.unix(exp);\n    }\n  }, {\n    key: \"getUsername\",\n    value: function getUsername() {\n      return this.decode(this.getToken()).username;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(token) {\n      return moment().isBefore(this.getExpiration(token));\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      var token = this.getToken();\n      return token && this.isValid(token) ? true : false;\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport default new AuthService();","map":{"version":3,"sources":["/home/apsit/Desktop/distributionManagementSystem/Admin/src/services/auth-service.js"],"names":["jwt","moment","AuthService","tokenKey","localStorage","getItem","token","decode","setItem","removeItem","exp","unix","getToken","username","isBefore","getExpiration","isValid"],"mappings":";;AAAA,OAAO,KAAKA,GAAZ,MAAqB,cAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;;IAEMC,W;;;;;;SAEJC,Q,GAAW,U;;;;;+BAEA;AACT,aAAOC,YAAY,CAACC,OAAb,CAAqB,KAAKF,QAA1B,CAAP;AACD;;;2BAEMG,K,EAAO;AACZ,aAAON,GAAG,CAACO,MAAJ,CAAWD,KAAX,CAAP;AACD;;;8BAESA,K,EAAO;AACfF,MAAAA,YAAY,CAACI,OAAb,CAAqB,KAAKL,QAA1B,EAAoCG,KAApC;AACD;;;qCAEgB;AACfF,MAAAA,YAAY,CAACK,UAAb,CAAwB,KAAKN,QAA7B;AACD;;;kCAEaG,K,EAAO;AACnB,UAAMI,GAAG,GAAG,KAAKH,MAAL,CAAYD,KAAZ,EAAmBI,GAA/B;AAEA,aAAOT,MAAM,CAACU,IAAP,CAAYD,GAAZ,CAAP;AACD;;;kCAEa;AACZ,aAAO,KAAKH,MAAL,CAAY,KAAKK,QAAL,EAAZ,EAA6BC,QAApC;AACD;;;4BAEOP,K,EAAO;AACb,aAAOL,MAAM,GAAGa,QAAT,CAAkB,KAAKC,aAAL,CAAmBT,KAAnB,CAAlB,CAAP;AACD;;;sCAEiB;AAChB,UAAMA,KAAK,GAAG,KAAKM,QAAL,EAAd;AAEA,aAAQN,KAAK,IAAI,KAAKU,OAAL,CAAaV,KAAb,CAAV,GAAiC,IAAjC,GAAwC,KAA/C;AACD;;;;;;AAIH,eAAe,IAAIJ,WAAJ,EAAf","sourcesContent":["import * as jwt from 'jsonwebtoken';\r\nimport * as moment from 'moment';\r\n\r\nclass AuthService {\r\n\r\n  tokenKey = 'tokenKey';\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this.tokenKey);\r\n  }\r\n\r\n  decode(token) {\r\n    return jwt.decode(token);\r\n  }\r\n\r\n  saveToken(token) {\r\n    localStorage.setItem(this.tokenKey, token);\r\n  }\r\n\r\n  invalidateUser() {\r\n    localStorage.removeItem(this.tokenKey);\r\n  }\r\n\r\n  getExpiration(token) {\r\n    const exp = this.decode(token).exp;\r\n\r\n    return moment.unix(exp);\r\n  }\r\n\r\n  getUsername() {\r\n    return this.decode(this.getToken()).username;\r\n  }\r\n\r\n  isValid(token) {\r\n    return moment().isBefore(this.getExpiration(token));\r\n  }\r\n\r\n  isAuthenticated() {\r\n    const token = this.getToken();\r\n\r\n    return (token && this.isValid(token)) ? true : false;\r\n  }\r\n}\r\n\r\n\r\nexport default new AuthService();\r\n"]},"metadata":{},"sourceType":"module"}