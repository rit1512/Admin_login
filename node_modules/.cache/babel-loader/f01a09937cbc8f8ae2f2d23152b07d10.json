{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) : factory(global.ReactTable = {}, global.React);\n})(this, function (exports, React) {\n  'use strict';\n\n  var React__default = 'default' in React ? React['default'] : React;\n\n  function unwrapExports(x) {\n    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var classnames = createCommonjsModule(function (module) {\n    /*!\n      Copyright (c) 2016 Jed Watson.\n      Licensed under the MIT License (MIT), see\n      http://jedwatson.github.io/classnames\n    */\n\n    /* global define */\n    (function () {\n      var hasOwn = {}.hasOwnProperty;\n\n      function classNames() {\n        var classes = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var arg = arguments[i];\n          if (!arg) continue;\n          var argType = typeof arg;\n\n          if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n          } else if (Array.isArray(arg)) {\n            classes.push(classNames.apply(null, arg));\n          } else if (argType === 'object') {\n            for (var key in arg) {\n              if (hasOwn.call(arg, key) && arg[key]) {\n                classes.push(key);\n              }\n            }\n          }\n        }\n\n        return classes.join(' ');\n      }\n\n      if ('object' !== 'undefined' && module.exports) {\n        module.exports = classNames;\n      } else if (typeof undefined === 'function' && typeof undefined.amd === 'object' && undefined.amd) {\n        // register as 'classnames', consistent with npm package name\n        undefined('classnames', [], function () {\n          return classNames;\n        });\n      } else {\n        window.classNames = classNames;\n      }\n    })();\n  });\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var defineProperty = function defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var inherits = function inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n    var target = {};\n\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n\n    return target;\n  };\n\n  var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  var slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  var toConsumableArray = function toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }; //\n\n\n  var _ = {\n    get: get$1,\n    set: set$1,\n    takeRight: takeRight,\n    last: last,\n    orderBy: orderBy,\n    range: range,\n    remove: remove,\n    clone: clone,\n    getFirstDefined: getFirstDefined,\n    sum: sum,\n    makeTemplateComponent: makeTemplateComponent,\n    groupBy: groupBy,\n    isArray: isArray,\n    splitProps: splitProps,\n    compactObject: compactObject,\n    isSortingDesc: isSortingDesc,\n    normalizeComponent: normalizeComponent,\n    asPx: asPx\n  };\n\n  function get$1(obj, path, def) {\n    if (!path) {\n      return obj;\n    }\n\n    var pathObj = makePathArray(path);\n    var val = void 0;\n\n    try {\n      val = pathObj.reduce(function (current, pathPart) {\n        return current[pathPart];\n      }, obj);\n    } catch (e) {// continue regardless of error\n    }\n\n    return typeof val !== 'undefined' ? val : def;\n  }\n\n  function set$1() {\n    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var path = arguments[1];\n    var value = arguments[2];\n    var keys = makePathArray(path);\n    var keyPart = void 0;\n    var cursor = obj;\n\n    while ((keyPart = keys.shift()) && keys.length) {\n      if (!cursor[keyPart]) {\n        cursor[keyPart] = {};\n      }\n\n      cursor = cursor[keyPart];\n    }\n\n    cursor[keyPart] = value;\n    return obj;\n  }\n\n  function takeRight(arr, n) {\n    var start = n > arr.length ? 0 : arr.length - n;\n    return arr.slice(start);\n  }\n\n  function last(arr) {\n    return arr[arr.length - 1];\n  }\n\n  function range(n) {\n    var arr = [];\n\n    for (var i = 0; i < n; i += 1) {\n      arr.push(n);\n    }\n\n    return arr;\n  }\n\n  function orderBy(arr, funcs, dirs, indexKey) {\n    return arr.sort(function (rowA, rowB) {\n      for (var i = 0; i < funcs.length; i += 1) {\n        var comp = funcs[i];\n        var desc = dirs[i] === false || dirs[i] === 'desc';\n        var sortInt = comp(rowA, rowB);\n\n        if (sortInt) {\n          return desc ? -sortInt : sortInt;\n        }\n      } // Use the row index for tie breakers\n\n\n      return dirs[0] ? rowA[indexKey] - rowB[indexKey] : rowB[indexKey] - rowA[indexKey];\n    });\n  }\n\n  function remove(a, b) {\n    return a.filter(function (o, i) {\n      var r = b(o);\n\n      if (r) {\n        a.splice(i, 1);\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  function clone(a) {\n    try {\n      return JSON.parse(JSON.stringify(a, function (key, value) {\n        if (typeof value === 'function') {\n          return value.toString();\n        }\n\n        return value;\n      }));\n    } catch (e) {\n      return a;\n    }\n  }\n\n  function getFirstDefined() {\n    for (var i = 0; i < arguments.length; i += 1) {\n      if (typeof (arguments.length <= i ? undefined : arguments[i]) !== 'undefined') {\n        return arguments.length <= i ? undefined : arguments[i];\n      }\n    }\n  }\n\n  function sum(arr) {\n    return arr.reduce(function (a, b) {\n      return a + b;\n    }, 0);\n  }\n\n  function makeTemplateComponent(compClass, displayName) {\n    if (!displayName) {\n      throw new Error('No displayName found for template component:', compClass);\n    }\n\n    var cmp = function cmp(_ref) {\n      var children = _ref.children,\n          className = _ref.className,\n          rest = objectWithoutProperties(_ref, ['children', 'className']);\n      return React__default.createElement('div', _extends({\n        className: classnames(compClass, className)\n      }, rest), children);\n    };\n\n    cmp.displayName = displayName;\n    return cmp;\n  }\n\n  function groupBy(xs, key) {\n    return xs.reduce(function (rv, x, i) {\n      var resKey = typeof key === 'function' ? key(x, i) : x[key];\n      rv[resKey] = isArray(rv[resKey]) ? rv[resKey] : [];\n      rv[resKey].push(x);\n      return rv;\n    }, {});\n  }\n\n  function asPx(value) {\n    value = Number(value);\n    return Number.isNaN(value) ? null : value + 'px';\n  }\n\n  function isArray(a) {\n    return Array.isArray(a);\n  } // ########################################################################\n  // Non-exported Helpers\n  // ########################################################################\n\n\n  function makePathArray(obj) {\n    return flattenDeep(obj).join('.').replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n  }\n\n  function flattenDeep(arr) {\n    var newArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!isArray(arr)) {\n      newArr.push(arr);\n    } else {\n      for (var i = 0; i < arr.length; i += 1) {\n        flattenDeep(arr[i], newArr);\n      }\n    }\n\n    return newArr;\n  }\n\n  function splitProps(_ref2) {\n    var className = _ref2.className,\n        style = _ref2.style,\n        rest = objectWithoutProperties(_ref2, ['className', 'style']);\n    return {\n      className: className,\n      style: style,\n      rest: rest || {}\n    };\n  }\n\n  function compactObject(obj) {\n    var newObj = {};\n\n    if (obj) {\n      Object.keys(obj).map(function (key) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && obj[key] !== undefined && typeof obj[key] !== 'undefined') {\n          newObj[key] = obj[key];\n        }\n\n        return true;\n      });\n    }\n\n    return newObj;\n  }\n\n  function isSortingDesc(d) {\n    return !!(d.sort === 'desc' || d.desc === true || d.asc === false);\n  }\n\n  function normalizeComponent(Comp, props) {\n    var fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Comp;\n    return isReactComponent(Comp) ? React__default.createElement(Comp, props) : typeof Comp === 'function' ? Comp(props) : fallback;\n  }\n\n  function isClassComponent(component) {\n    return typeof component === 'function' && !!Object.getPrototypeOf(component).isReactComponent;\n  }\n\n  function isFunctionComponent(component) {\n    return typeof component === 'function' && String(component).includes('.createElement');\n  }\n\n  function isReactComponent(component) {\n    return isClassComponent(component) || isFunctionComponent(component);\n  }\n\n  var Lifecycle = function Lifecycle(Base) {\n    return function (_Base) {\n      inherits(_class, _Base);\n\n      function _class() {\n        classCallCheck(this, _class);\n        return possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n      }\n\n      createClass(_class, [{\n        key: 'UNSAFE_componentWillMount',\n        value: function UNSAFE_componentWillMount() {\n          this.setStateWithData(this.getDataModel(this.getResolvedState(), true));\n        }\n      }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n          this.fireFetchData();\n        }\n      }, {\n        key: 'UNSAFE_componentWillReceiveProps',\n        value: function UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n          var oldState = this.getResolvedState();\n          var newState = this.getResolvedState(nextProps, nextState); // Do a deep compare of new and old `defaultOption` and\n          // if they are different reset `option = defaultOption`\n\n          var defaultableOptions = ['sorted', 'filtered', 'resized', 'expanded'];\n          defaultableOptions.forEach(function (x) {\n            var defaultName = 'default' + (x.charAt(0).toUpperCase() + x.slice(1));\n\n            if (JSON.stringify(oldState[defaultName]) !== JSON.stringify(newState[defaultName])) {\n              newState[x] = newState[defaultName];\n            }\n          }); // If they change these table options, we need to reset defaults\n          // or else we could get into a state where the user has changed the UI\n          // and then disabled the ability to change it back.\n          // e.g. If `filterable` has changed, set `filtered = defaultFiltered`\n\n          var resettableOptions = ['sortable', 'filterable', 'resizable'];\n          resettableOptions.forEach(function (x) {\n            if (oldState[x] !== newState[x]) {\n              var baseName = x.replace('able', '');\n              var optionName = baseName + 'ed';\n              var defaultName = 'default' + (optionName.charAt(0).toUpperCase() + optionName.slice(1));\n              newState[optionName] = newState[defaultName];\n            }\n          }); // Props that trigger a data update\n\n          if (oldState.data !== newState.data || oldState.columns !== newState.columns || oldState.pivotBy !== newState.pivotBy || oldState.sorted !== newState.sorted || oldState.filtered !== newState.filtered) {\n            this.setStateWithData(this.getDataModel(newState, oldState.data !== newState.data));\n          }\n        }\n      }, {\n        key: 'setStateWithData',\n        value: function setStateWithData(newState, cb) {\n          var _this2 = this;\n\n          var oldState = this.getResolvedState();\n          var newResolvedState = this.getResolvedState({}, newState);\n          var freezeWhenExpanded = newResolvedState.freezeWhenExpanded; // Default to unfrozen state\n\n          newResolvedState.frozen = false; // If freezeWhenExpanded is set, check for frozen conditions\n\n          if (freezeWhenExpanded) {\n            // if any rows are expanded, freeze the existing data and sorting\n            var keys = Object.keys(newResolvedState.expanded);\n\n            for (var i = 0; i < keys.length; i += 1) {\n              if (newResolvedState.expanded[keys[i]]) {\n                newResolvedState.frozen = true;\n                break;\n              }\n            }\n          } // If the data isn't frozen and either the data or\n          // sorting model has changed, update the data\n\n\n          if (oldState.frozen && !newResolvedState.frozen || oldState.sorted !== newResolvedState.sorted || oldState.filtered !== newResolvedState.filtered || oldState.showFilters !== newResolvedState.showFilters || !newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData) {\n            // Handle collapseOnsortedChange & collapseOnDataChange\n            if (oldState.sorted !== newResolvedState.sorted && this.props.collapseOnSortingChange || oldState.filtered !== newResolvedState.filtered || oldState.showFilters !== newResolvedState.showFilters || oldState.sortedData && !newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData && this.props.collapseOnDataChange) {\n              newResolvedState.expanded = {};\n            }\n\n            Object.assign(newResolvedState, this.getSortedData(newResolvedState));\n          } // Set page to 0 if filters change\n\n\n          if (oldState.filtered !== newResolvedState.filtered) {\n            newResolvedState.page = 0;\n          } // Calculate pageSize all the time\n\n\n          if (newResolvedState.sortedData) {\n            newResolvedState.pages = newResolvedState.manual ? newResolvedState.pages : Math.ceil(newResolvedState.sortedData.length / newResolvedState.pageSize);\n            newResolvedState.page = newResolvedState.manual ? newResolvedState.page : Math.max(newResolvedState.page >= newResolvedState.pages ? newResolvedState.pages - 1 : newResolvedState.page, 0);\n          }\n\n          return this.setState(newResolvedState, function () {\n            if (cb) {\n              cb();\n            }\n\n            if (oldState.page !== newResolvedState.page || oldState.pageSize !== newResolvedState.pageSize || oldState.sorted !== newResolvedState.sorted || oldState.filtered !== newResolvedState.filtered) {\n              _this2.fireFetchData();\n            }\n          });\n        }\n      }]);\n      return _class;\n    }(Base);\n  };\n\n  var Methods = function Methods(Base) {\n    return function (_Base) {\n      inherits(_class, _Base);\n\n      function _class() {\n        classCallCheck(this, _class);\n        return possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n      }\n\n      createClass(_class, [{\n        key: 'getResolvedState',\n        value: function getResolvedState(props, state) {\n          var resolvedState = _extends({}, _.compactObject(this.state), _.compactObject(this.props), _.compactObject(state), _.compactObject(props));\n\n          return resolvedState;\n        }\n      }, {\n        key: 'getDataModel',\n        value: function getDataModel(newState, dataChanged) {\n          var _this2 = this;\n\n          var columns = newState.columns,\n              _newState$pivotBy = newState.pivotBy,\n              pivotBy = _newState$pivotBy === undefined ? [] : _newState$pivotBy,\n              data = newState.data,\n              resolveData = newState.resolveData,\n              pivotIDKey = newState.pivotIDKey,\n              pivotValKey = newState.pivotValKey,\n              subRowsKey = newState.subRowsKey,\n              aggregatedKey = newState.aggregatedKey,\n              nestingLevelKey = newState.nestingLevelKey,\n              originalKey = newState.originalKey,\n              indexKey = newState.indexKey,\n              groupedByPivotKey = newState.groupedByPivotKey,\n              SubComponent = newState.SubComponent; // Determine Header Groups\n\n          var hasHeaderGroups = false;\n          columns.forEach(function (column) {\n            if (column.columns) {\n              hasHeaderGroups = true;\n            }\n          });\n          var columnsWithExpander = [].concat(toConsumableArray(columns));\n          var expanderColumn = columns.find(function (col) {\n            return col.expander || col.columns && col.columns.some(function (col2) {\n              return col2.expander;\n            });\n          }); // The actual expander might be in the columns field of a group column\n\n          if (expanderColumn && !expanderColumn.expander) {\n            expanderColumn = expanderColumn.columns.find(function (col) {\n              return col.expander;\n            });\n          } // If we have SubComponent's we need to make sure we have an expander column\n\n\n          if (SubComponent && !expanderColumn) {\n            expanderColumn = {\n              expander: true\n            };\n            columnsWithExpander = [expanderColumn].concat(toConsumableArray(columnsWithExpander));\n          }\n\n          var makeDecoratedColumn = function makeDecoratedColumn(column, parentColumn) {\n            var dcol = void 0;\n\n            if (column.expander) {\n              dcol = _extends({}, _this2.props.column, _this2.props.expanderDefaults, column);\n            } else {\n              dcol = _extends({}, _this2.props.column, column);\n            } // Ensure minWidth is not greater than maxWidth if set\n\n\n            if (dcol.maxWidth < dcol.minWidth) {\n              dcol.minWidth = dcol.maxWidth;\n            }\n\n            if (parentColumn) {\n              dcol.parentColumn = parentColumn;\n            } // First check for string accessor\n\n\n            if (typeof dcol.accessor === 'string') {\n              dcol.id = dcol.id || dcol.accessor;\n              var accessorString = dcol.accessor;\n\n              dcol.accessor = function (row) {\n                return _.get(row, accessorString);\n              };\n\n              return dcol;\n            } // Fall back to functional accessor (but require an ID)\n\n\n            if (dcol.accessor && !dcol.id) {\n              console.warn(dcol);\n              throw new Error('A column id is required if using a non-string accessor for column above.');\n            } // Fall back to an undefined accessor\n\n\n            if (!dcol.accessor) {\n              dcol.accessor = function () {\n                return undefined;\n              };\n            }\n\n            return dcol;\n          };\n\n          var allDecoratedColumns = []; // Decorate the columns\n\n          var decorateAndAddToAll = function decorateAndAddToAll(column, parentColumn) {\n            var decoratedColumn = makeDecoratedColumn(column, parentColumn);\n            allDecoratedColumns.push(decoratedColumn);\n            return decoratedColumn;\n          };\n\n          var decoratedColumns = columnsWithExpander.map(function (column) {\n            if (column.columns) {\n              return _extends({}, column, {\n                columns: column.columns.map(function (d) {\n                  return decorateAndAddToAll(d, column);\n                })\n              });\n            }\n\n            return decorateAndAddToAll(column);\n          }); // Build the visible columns, headers and flat column list\n\n          var visibleColumns = decoratedColumns.slice();\n          var allVisibleColumns = [];\n          visibleColumns = visibleColumns.map(function (column) {\n            if (column.columns) {\n              var visibleSubColumns = column.columns.filter(function (d) {\n                return pivotBy.indexOf(d.id) > -1 ? false : _.getFirstDefined(d.show, true);\n              });\n              return _extends({}, column, {\n                columns: visibleSubColumns\n              });\n            }\n\n            return column;\n          });\n          visibleColumns = visibleColumns.filter(function (column) {\n            return column.columns ? column.columns.length : pivotBy.indexOf(column.id) > -1 ? false : _.getFirstDefined(column.show, true);\n          }); // Find any custom pivot location\n\n          var pivotIndex = visibleColumns.findIndex(function (col) {\n            return col.pivot;\n          }); // Handle Pivot Columns\n\n          if (pivotBy.length) {\n            // Retrieve the pivot columns in the correct pivot order\n            var pivotColumns = [];\n            pivotBy.forEach(function (pivotID) {\n              var found = allDecoratedColumns.find(function (d) {\n                return d.id === pivotID;\n              });\n\n              if (found) {\n                pivotColumns.push(found);\n              }\n            });\n            var PivotParentColumn = pivotColumns.reduce(function (prev, current) {\n              return prev && prev === current.parentColumn && current.parentColumn;\n            }, pivotColumns[0].parentColumn);\n            var PivotGroupHeader = hasHeaderGroups && PivotParentColumn.Header;\n\n            PivotGroupHeader = PivotGroupHeader || function () {\n              return React__default.createElement('strong', null, 'Pivoted');\n            };\n\n            var pivotColumnGroup = {\n              Header: PivotGroupHeader,\n              columns: pivotColumns.map(function (col) {\n                return _extends({}, _this2.props.pivotDefaults, col, {\n                  pivoted: true\n                });\n              }) // Place the pivotColumns back into the visibleColumns\n\n            };\n\n            if (pivotIndex >= 0) {\n              pivotColumnGroup = _extends({}, visibleColumns[pivotIndex], pivotColumnGroup);\n              visibleColumns.splice(pivotIndex, 1, pivotColumnGroup);\n            } else {\n              visibleColumns.unshift(pivotColumnGroup);\n            }\n          } // Build Header Groups\n\n\n          var headerGroups = [];\n          var currentSpan = []; // A convenience function to add a header and reset the currentSpan\n\n          var addHeader = function addHeader(columns, column) {\n            headerGroups.push(_extends({}, _this2.props.column, column, {\n              columns: columns\n            }));\n            currentSpan = [];\n          }; // Build flast list of allVisibleColumns and HeaderGroups\n\n\n          visibleColumns.forEach(function (column) {\n            if (column.columns) {\n              allVisibleColumns = allVisibleColumns.concat(column.columns);\n\n              if (currentSpan.length > 0) {\n                addHeader(currentSpan);\n              }\n\n              addHeader(column.columns, column);\n              return;\n            }\n\n            allVisibleColumns.push(column);\n            currentSpan.push(column);\n          });\n\n          if (hasHeaderGroups && currentSpan.length > 0) {\n            addHeader(currentSpan);\n          } // Access the data\n\n\n          var accessRow = function accessRow(d, i) {\n            var _row;\n\n            var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            var row = (_row = {}, defineProperty(_row, originalKey, d), defineProperty(_row, indexKey, i), defineProperty(_row, subRowsKey, d[subRowsKey]), defineProperty(_row, nestingLevelKey, level), _row);\n            allDecoratedColumns.forEach(function (column) {\n              if (column.expander) return;\n              row[column.id] = column.accessor(d);\n            });\n\n            if (row[subRowsKey]) {\n              row[subRowsKey] = row[subRowsKey].map(function (d, i) {\n                return accessRow(d, i, level + 1);\n              });\n            }\n\n            return row;\n          }; // // If the data hasn't changed, just use the cached data\n\n\n          var resolvedData = this.resolvedData; // If the data has changed, run the data resolver and cache the result\n\n          if (!this.resolvedData || dataChanged) {\n            resolvedData = resolveData(data);\n            this.resolvedData = resolvedData;\n          } // Use the resolved data\n\n\n          resolvedData = resolvedData.map(function (d, i) {\n            return accessRow(d, i);\n          }); // TODO: Make it possible to fabricate nested rows without pivoting\n\n          var aggregatingColumns = allVisibleColumns.filter(function (d) {\n            return !d.expander && d.aggregate;\n          }); // If pivoting, recursively group the data\n\n          var aggregate = function aggregate(rows) {\n            var aggregationValues = {};\n            aggregatingColumns.forEach(function (column) {\n              var values = rows.map(function (d) {\n                return d[column.id];\n              });\n              aggregationValues[column.id] = column.aggregate(values, rows);\n            });\n            return aggregationValues;\n          };\n\n          if (pivotBy.length) {\n            var groupRecursively = function groupRecursively(rows, keys) {\n              var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0; // This is the last level, just return the rows\n\n              if (i === keys.length) {\n                return rows;\n              } // Group the rows together for this level\n\n\n              var groupedRows = Object.entries(_.groupBy(rows, keys[i])).map(function (_ref) {\n                var _ref3;\n\n                var _ref2 = slicedToArray(_ref, 2),\n                    key = _ref2[0],\n                    value = _ref2[1];\n\n                return _ref3 = {}, defineProperty(_ref3, pivotIDKey, keys[i]), defineProperty(_ref3, pivotValKey, key), defineProperty(_ref3, keys[i], key), defineProperty(_ref3, subRowsKey, value), defineProperty(_ref3, nestingLevelKey, i), defineProperty(_ref3, groupedByPivotKey, true), _ref3;\n              }); // Recurse into the subRows\n\n              groupedRows = groupedRows.map(function (rowGroup) {\n                var _babelHelpers$extends;\n\n                var subRows = groupRecursively(rowGroup[subRowsKey], keys, i + 1);\n                return _extends({}, rowGroup, (_babelHelpers$extends = {}, defineProperty(_babelHelpers$extends, subRowsKey, subRows), defineProperty(_babelHelpers$extends, aggregatedKey, true), _babelHelpers$extends), aggregate(subRows));\n              });\n              return groupedRows;\n            };\n\n            resolvedData = groupRecursively(resolvedData, pivotBy);\n          }\n\n          return _extends({}, newState, {\n            resolvedData: resolvedData,\n            allVisibleColumns: allVisibleColumns,\n            headerGroups: headerGroups,\n            allDecoratedColumns: allDecoratedColumns,\n            hasHeaderGroups: hasHeaderGroups\n          });\n        }\n      }, {\n        key: 'getSortedData',\n        value: function getSortedData(resolvedState) {\n          var manual = resolvedState.manual,\n              sorted = resolvedState.sorted,\n              filtered = resolvedState.filtered,\n              defaultFilterMethod = resolvedState.defaultFilterMethod,\n              resolvedData = resolvedState.resolvedData,\n              allDecoratedColumns = resolvedState.allDecoratedColumns;\n          var sortMethodsByColumnID = {};\n          allDecoratedColumns.filter(function (col) {\n            return col.sortMethod;\n          }).forEach(function (col) {\n            sortMethodsByColumnID[col.id] = col.sortMethod;\n          }); // Resolve the data from either manual data or sorted data\n\n          return {\n            sortedData: manual ? resolvedData : this.sortData(this.filterData(resolvedData, filtered, defaultFilterMethod, allDecoratedColumns), sorted, sortMethodsByColumnID)\n          };\n        }\n      }, {\n        key: 'fireFetchData',\n        value: function fireFetchData() {\n          // determine the current state, preferring certain state values over props\n          var currentState = _extends({}, this.getResolvedState(), {\n            page: this.getStateOrProp('page'),\n            pageSize: this.getStateOrProp('pageSize'),\n            filtered: this.getStateOrProp('filtered')\n          });\n\n          this.props.onFetchData(currentState, this);\n        }\n      }, {\n        key: 'getPropOrState',\n        value: function getPropOrState(key) {\n          return _.getFirstDefined(this.props[key], this.state[key]);\n        }\n      }, {\n        key: 'getStateOrProp',\n        value: function getStateOrProp(key) {\n          return _.getFirstDefined(this.state[key], this.props[key]);\n        }\n      }, {\n        key: 'filterData',\n        value: function filterData(data, filtered, defaultFilterMethod, allVisibleColumns) {\n          var _this3 = this;\n\n          var filteredData = data;\n\n          if (filtered.length) {\n            filteredData = filtered.reduce(function (filteredSoFar, nextFilter) {\n              var column = allVisibleColumns.find(function (x) {\n                return x.id === nextFilter.id;\n              }); // Don't filter hidden columns or columns that have had their filters disabled\n\n              if (!column || column.filterable === false) {\n                return filteredSoFar;\n              }\n\n              var filterMethod = column.filterMethod || defaultFilterMethod; // If 'filterAll' is set to true, pass the entire dataset to the filter method\n\n              if (column.filterAll) {\n                return filterMethod(nextFilter, filteredSoFar, column);\n              }\n\n              return filteredSoFar.filter(function (row) {\n                return filterMethod(nextFilter, row, column);\n              });\n            }, filteredData); // Apply the filter to the subrows if we are pivoting, and then\n            // filter any rows without subcolumns because it would be strange to show\n\n            filteredData = filteredData.map(function (row) {\n              if (!row[_this3.props.subRowsKey]) {\n                return row;\n              }\n\n              return _extends({}, row, defineProperty({}, _this3.props.subRowsKey, _this3.filterData(row[_this3.props.subRowsKey], filtered, defaultFilterMethod, allVisibleColumns)));\n            }).filter(function (row) {\n              if (!row[_this3.props.subRowsKey]) {\n                return true;\n              }\n\n              return row[_this3.props.subRowsKey].length > 0;\n            });\n          }\n\n          return filteredData;\n        }\n      }, {\n        key: 'sortData',\n        value: function sortData(data, sorted) {\n          var _this4 = this;\n\n          var sortMethodsByColumnID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n          if (!sorted.length) {\n            return data;\n          }\n\n          var sortedData = (this.props.orderByMethod || _.orderBy)(data, sorted.map(function (sort) {\n            // Support custom sorting methods for each column\n            if (sortMethodsByColumnID[sort.id]) {\n              return function (a, b) {\n                return sortMethodsByColumnID[sort.id](a[sort.id], b[sort.id], sort.desc);\n              };\n            }\n\n            return function (a, b) {\n              return _this4.props.defaultSortMethod(a[sort.id], b[sort.id], sort.desc);\n            };\n          }), sorted.map(function (d) {\n            return !d.desc;\n          }), this.props.indexKey);\n\n          sortedData.forEach(function (row) {\n            if (!row[_this4.props.subRowsKey]) {\n              return;\n            }\n\n            row[_this4.props.subRowsKey] = _this4.sortData(row[_this4.props.subRowsKey], sorted, sortMethodsByColumnID);\n          });\n          return sortedData;\n        }\n      }, {\n        key: 'getMinRows',\n        value: function getMinRows() {\n          return _.getFirstDefined(this.props.minRows, this.getStateOrProp('pageSize'));\n        } // User actions\n\n      }, {\n        key: 'onPageChange',\n        value: function onPageChange(page) {\n          var _props = this.props,\n              onPageChange = _props.onPageChange,\n              collapseOnPageChange = _props.collapseOnPageChange;\n          var newState = {\n            page: page\n          };\n\n          if (collapseOnPageChange) {\n            newState.expanded = {};\n          }\n\n          this.setStateWithData(newState, function () {\n            return onPageChange && onPageChange(page);\n          });\n        }\n      }, {\n        key: 'onPageSizeChange',\n        value: function onPageSizeChange(newPageSize) {\n          var onPageSizeChange = this.props.onPageSizeChange;\n\n          var _getResolvedState = this.getResolvedState(),\n              pageSize = _getResolvedState.pageSize,\n              page = _getResolvedState.page; // Normalize the page to display\n\n\n          var currentRow = pageSize * page;\n          var newPage = Math.floor(currentRow / newPageSize);\n          this.setStateWithData({\n            pageSize: newPageSize,\n            page: newPage\n          }, function () {\n            return onPageSizeChange && onPageSizeChange(newPageSize, newPage);\n          });\n        }\n      }, {\n        key: 'sortColumn',\n        value: function sortColumn(column, additive) {\n          var _getResolvedState2 = this.getResolvedState(),\n              sorted = _getResolvedState2.sorted,\n              skipNextSort = _getResolvedState2.skipNextSort,\n              defaultSortDesc = _getResolvedState2.defaultSortDesc;\n\n          var firstSortDirection = Object.prototype.hasOwnProperty.call(column, 'defaultSortDesc') ? column.defaultSortDesc : defaultSortDesc;\n          var secondSortDirection = !firstSortDirection; // we can't stop event propagation from the column resize move handlers\n          // attached to the document because of react's synthetic events\n          // so we have to prevent the sort function from actually sorting\n          // if we click on the column resize element within a header.\n\n          if (skipNextSort) {\n            this.setStateWithData({\n              skipNextSort: false\n            });\n            return;\n          }\n\n          var onSortedChange = this.props.onSortedChange;\n\n          var newSorted = _.clone(sorted || []).map(function (d) {\n            d.desc = _.isSortingDesc(d);\n            return d;\n          });\n\n          if (!_.isArray(column)) {\n            // Single-Sort\n            var existingIndex = newSorted.findIndex(function (d) {\n              return d.id === column.id;\n            });\n\n            if (existingIndex > -1) {\n              var existing = newSorted[existingIndex];\n\n              if (existing.desc === secondSortDirection) {\n                if (additive) {\n                  newSorted.splice(existingIndex, 1);\n                } else {\n                  existing.desc = firstSortDirection;\n                  newSorted = [existing];\n                }\n              } else {\n                existing.desc = secondSortDirection;\n\n                if (!additive) {\n                  newSorted = [existing];\n                }\n              }\n            } else if (additive) {\n              newSorted.push({\n                id: column.id,\n                desc: firstSortDirection\n              });\n            } else {\n              newSorted = [{\n                id: column.id,\n                desc: firstSortDirection\n              }];\n            }\n          } else {\n            // Multi-Sort\n            var _existingIndex = newSorted.findIndex(function (d) {\n              return d.id === column[0].id;\n            }); // Existing Sorted Column\n\n\n            if (_existingIndex > -1) {\n              var _existing = newSorted[_existingIndex];\n\n              if (_existing.desc === secondSortDirection) {\n                if (additive) {\n                  newSorted.splice(_existingIndex, column.length);\n                } else {\n                  column.forEach(function (d, i) {\n                    newSorted[_existingIndex + i].desc = firstSortDirection;\n                  });\n                }\n              } else {\n                column.forEach(function (d, i) {\n                  newSorted[_existingIndex + i].desc = secondSortDirection;\n                });\n              }\n\n              if (!additive) {\n                newSorted = newSorted.slice(_existingIndex, column.length);\n              } // New Sort Column\n\n            } else if (additive) {\n              newSorted = newSorted.concat(column.map(function (d) {\n                return {\n                  id: d.id,\n                  desc: firstSortDirection\n                };\n              }));\n            } else {\n              newSorted = column.map(function (d) {\n                return {\n                  id: d.id,\n                  desc: firstSortDirection\n                };\n              });\n            }\n          }\n\n          this.setStateWithData({\n            page: !sorted.length && newSorted.length || !additive ? 0 : this.state.page,\n            sorted: newSorted\n          }, function () {\n            return onSortedChange && onSortedChange(newSorted, column, additive);\n          });\n        }\n      }, {\n        key: 'filterColumn',\n        value: function filterColumn(column, value) {\n          var _getResolvedState3 = this.getResolvedState(),\n              filtered = _getResolvedState3.filtered;\n\n          var onFilteredChange = this.props.onFilteredChange; // Remove old filter first if it exists\n\n          var newFiltering = (filtered || []).filter(function (x) {\n            return x.id !== column.id;\n          });\n\n          if (value !== '') {\n            newFiltering.push({\n              id: column.id,\n              value: value\n            });\n          }\n\n          this.setStateWithData({\n            filtered: newFiltering\n          }, function () {\n            return onFilteredChange && onFilteredChange(newFiltering, column, value);\n          });\n        }\n      }, {\n        key: 'resizeColumnStart',\n        value: function resizeColumnStart(event, column, isTouch) {\n          var _this5 = this;\n\n          event.stopPropagation();\n          var parentWidth = event.target.parentElement.getBoundingClientRect().width;\n          var pageX = void 0;\n\n          if (isTouch) {\n            pageX = event.changedTouches[0].pageX;\n          } else {\n            pageX = event.pageX;\n          }\n\n          this.trapEvents = true;\n          this.setStateWithData({\n            currentlyResizing: {\n              id: column.id,\n              startX: pageX,\n              parentWidth: parentWidth\n            }\n          }, function () {\n            if (isTouch) {\n              document.addEventListener('touchmove', _this5.resizeColumnMoving);\n              document.addEventListener('touchcancel', _this5.resizeColumnEnd);\n              document.addEventListener('touchend', _this5.resizeColumnEnd);\n            } else {\n              document.addEventListener('mousemove', _this5.resizeColumnMoving);\n              document.addEventListener('mouseup', _this5.resizeColumnEnd);\n              document.addEventListener('mouseleave', _this5.resizeColumnEnd);\n            }\n          });\n        }\n      }, {\n        key: 'resizeColumnMoving',\n        value: function resizeColumnMoving(event) {\n          event.stopPropagation();\n          var _props2 = this.props,\n              onResizedChange = _props2.onResizedChange,\n              column = _props2.column;\n\n          var _getResolvedState4 = this.getResolvedState(),\n              resized = _getResolvedState4.resized,\n              currentlyResizing = _getResolvedState4.currentlyResizing,\n              columns = _getResolvedState4.columns;\n\n          var currentColumn = columns.find(function (c) {\n            return c.accessor === currentlyResizing.id || c.id === currentlyResizing.id;\n          });\n          var minResizeWidth = currentColumn && currentColumn.minResizeWidth != null ? currentColumn.minResizeWidth : column.minResizeWidth; // Delete old value\n\n          var newResized = resized.filter(function (x) {\n            return x.id !== currentlyResizing.id;\n          });\n          var pageX = void 0;\n\n          if (event.type === 'touchmove') {\n            pageX = event.changedTouches[0].pageX;\n          } else if (event.type === 'mousemove') {\n            pageX = event.pageX;\n          }\n\n          var newWidth = Math.max(currentlyResizing.parentWidth + pageX - currentlyResizing.startX, minResizeWidth);\n          newResized.push({\n            id: currentlyResizing.id,\n            value: newWidth\n          });\n          this.setStateWithData({\n            resized: newResized\n          }, function () {\n            return onResizedChange && onResizedChange(newResized, event);\n          });\n        }\n      }, {\n        key: 'resizeColumnEnd',\n        value: function resizeColumnEnd(event) {\n          event.stopPropagation();\n          var isTouch = event.type === 'touchend' || event.type === 'touchcancel';\n\n          if (isTouch) {\n            document.removeEventListener('touchmove', this.resizeColumnMoving);\n            document.removeEventListener('touchcancel', this.resizeColumnEnd);\n            document.removeEventListener('touchend', this.resizeColumnEnd);\n          } // If its a touch event clear the mouse one's as well because sometimes\n          // the mouseDown event gets called as well, but the mouseUp event doesn't\n\n\n          document.removeEventListener('mousemove', this.resizeColumnMoving);\n          document.removeEventListener('mouseup', this.resizeColumnEnd);\n          document.removeEventListener('mouseleave', this.resizeColumnEnd); // The touch events don't propagate up to the sorting's onMouseDown event so\n          // no need to prevent it from happening or else the first click after a touch\n          // event resize will not sort the column.\n\n          if (!isTouch) {\n            this.setStateWithData({\n              skipNextSort: true,\n              currentlyResizing: false\n            });\n          }\n        }\n      }]);\n      return _class;\n    }(Base);\n  };\n\n  var defaultButton = function defaultButton(props) {\n    return React__default.createElement('button', _extends({\n      type: 'button'\n    }, props, {\n      className: '-btn'\n    }), props.children);\n  };\n\n  var ReactTablePagination = function (_Component) {\n    inherits(ReactTablePagination, _Component);\n\n    function ReactTablePagination(props) {\n      classCallCheck(this, ReactTablePagination);\n\n      var _this = possibleConstructorReturn(this, (ReactTablePagination.__proto__ || Object.getPrototypeOf(ReactTablePagination)).call(this, props));\n\n      _this.getSafePage = _this.getSafePage.bind(_this);\n      _this.changePage = _this.changePage.bind(_this);\n      _this.applyPage = _this.applyPage.bind(_this);\n      _this.state = {\n        page: props.page\n      };\n      return _this;\n    }\n\n    createClass(ReactTablePagination, [{\n      key: 'UNSAFE_componentWillReceiveProps',\n      value: function UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.props.page !== nextProps.page) {\n          this.setState({\n            page: nextProps.page\n          });\n        }\n      }\n    }, {\n      key: 'getSafePage',\n      value: function getSafePage(page) {\n        if (Number.isNaN(page)) {\n          page = this.props.page;\n        }\n\n        return Math.min(Math.max(page, 0), this.props.pages - 1);\n      }\n    }, {\n      key: 'changePage',\n      value: function changePage(page) {\n        page = this.getSafePage(page);\n        this.setState({\n          page: page\n        });\n\n        if (this.props.page !== page) {\n          this.props.onPageChange(page);\n        }\n      }\n    }, {\n      key: 'applyPage',\n      value: function applyPage(e) {\n        if (e) {\n          e.preventDefault();\n        }\n\n        var page = this.state.page;\n        this.changePage(page === '' ? this.props.page : page);\n      }\n    }, {\n      key: 'getPageJumpProperties',\n      value: function getPageJumpProperties() {\n        var _this2 = this;\n\n        return {\n          onKeyPress: function onKeyPress(e) {\n            if (e.which === 13 || e.keyCode === 13) {\n              _this2.applyPage();\n            }\n          },\n          onBlur: this.applyPage,\n          value: this.state.page === '' ? '' : this.state.page + 1,\n          onChange: function onChange(e) {\n            var val = e.target.value;\n            var page = val - 1;\n\n            if (val === '') {\n              return _this2.setState({\n                page: val\n              });\n            }\n\n            _this2.setState({\n              page: _this2.getSafePage(page)\n            });\n          },\n          inputType: this.state.page === '' ? 'text' : 'number',\n          pageJumpText: this.props.pageJumpText\n        };\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        var _props = this.props,\n            pages = _props.pages,\n            page = _props.page,\n            showPageSizeOptions = _props.showPageSizeOptions,\n            pageSizeOptions = _props.pageSizeOptions,\n            pageSize = _props.pageSize,\n            showPageJump = _props.showPageJump,\n            canPrevious = _props.canPrevious,\n            canNext = _props.canNext,\n            onPageSizeChange = _props.onPageSizeChange,\n            className = _props.className,\n            PreviousComponent = _props.PreviousComponent,\n            NextComponent = _props.NextComponent,\n            renderPageJump = _props.renderPageJump,\n            renderCurrentPage = _props.renderCurrentPage,\n            renderTotalPagesCount = _props.renderTotalPagesCount,\n            renderPageSizeOptions = _props.renderPageSizeOptions;\n        return React__default.createElement('div', {\n          className: classnames(className, '-pagination'),\n          style: this.props.style\n        }, React__default.createElement('div', {\n          className: '-previous'\n        }, React__default.createElement(PreviousComponent, {\n          onClick: function onClick() {\n            if (!canPrevious) return;\n\n            _this3.changePage(page - 1);\n          },\n          disabled: !canPrevious\n        }, this.props.previousText)), React__default.createElement('div', {\n          className: '-center'\n        }, React__default.createElement('span', {\n          className: '-pageInfo'\n        }, this.props.pageText, ' ', showPageJump ? renderPageJump(this.getPageJumpProperties()) : renderCurrentPage(page), ' ', this.props.ofText, ' ', renderTotalPagesCount(pages)), showPageSizeOptions && renderPageSizeOptions({\n          pageSize: pageSize,\n          rowsSelectorText: this.props.rowsSelectorText,\n          pageSizeOptions: pageSizeOptions,\n          onPageSizeChange: onPageSizeChange,\n          rowsText: this.props.rowsText\n        })), React__default.createElement('div', {\n          className: '-next'\n        }, React__default.createElement(NextComponent, {\n          onClick: function onClick() {\n            if (!canNext) return;\n\n            _this3.changePage(page + 1);\n          },\n          disabled: !canNext\n        }, this.props.nextText)));\n      }\n    }]);\n    return ReactTablePagination;\n  }(React.Component);\n\n  ReactTablePagination.defaultProps = {\n    PreviousComponent: defaultButton,\n    NextComponent: defaultButton,\n    renderPageJump: function renderPageJump(_ref) {\n      var onChange = _ref.onChange,\n          value = _ref.value,\n          onBlur = _ref.onBlur,\n          onKeyPress = _ref.onKeyPress,\n          inputType = _ref.inputType,\n          pageJumpText = _ref.pageJumpText;\n      return React__default.createElement('div', {\n        className: '-pageJump'\n      }, React__default.createElement('input', {\n        'aria-label': pageJumpText,\n        type: inputType,\n        onChange: onChange,\n        value: value,\n        onBlur: onBlur,\n        onKeyPress: onKeyPress\n      }));\n    },\n    renderCurrentPage: function renderCurrentPage(page) {\n      return React__default.createElement('span', {\n        className: '-currentPage'\n      }, page + 1);\n    },\n    renderTotalPagesCount: function renderTotalPagesCount(pages) {\n      return React__default.createElement('span', {\n        className: '-totalPages'\n      }, pages || 1);\n    },\n    renderPageSizeOptions: function renderPageSizeOptions(_ref2) {\n      var pageSize = _ref2.pageSize,\n          pageSizeOptions = _ref2.pageSizeOptions,\n          rowsSelectorText = _ref2.rowsSelectorText,\n          onPageSizeChange = _ref2.onPageSizeChange,\n          rowsText = _ref2.rowsText;\n      return React__default.createElement('span', {\n        className: 'select-wrap -pageSizeOptions'\n      }, React__default.createElement('select', {\n        'aria-label': rowsSelectorText,\n        onChange: function onChange(e) {\n          return onPageSizeChange(Number(e.target.value));\n        },\n        value: pageSize\n      }, pageSizeOptions.map(function (option, i) {\n        return (// eslint-disable-next-line react/no-array-index-key\n          React__default.createElement('option', {\n            key: i,\n            value: option\n          }, option + ' ' + rowsText)\n        );\n      })));\n    }\n  }; //\n\n  var emptyObj = function emptyObj() {\n    return {};\n  };\n\n  var defaultProps = {\n    // General\n    data: [],\n    resolveData: function resolveData(data) {\n      return data;\n    },\n    loading: false,\n    showPagination: true,\n    showPaginationTop: false,\n    showPaginationBottom: true,\n    showPageSizeOptions: true,\n    pageSizeOptions: [5, 10, 20, 25, 50, 100],\n    defaultPage: 0,\n    defaultPageSize: 20,\n    showPageJump: true,\n    collapseOnSortingChange: true,\n    collapseOnPageChange: true,\n    collapseOnDataChange: true,\n    freezeWhenExpanded: false,\n    sortable: true,\n    multiSort: true,\n    resizable: true,\n    filterable: false,\n    defaultSortDesc: false,\n    defaultSorted: [],\n    defaultFiltered: [],\n    defaultResized: [],\n    defaultExpanded: {},\n    // eslint-disable-next-line no-unused-vars\n    defaultFilterMethod: function defaultFilterMethod(filter, row, column) {\n      var id = filter.pivotId || filter.id;\n      return row[id] !== undefined ? String(row[id]).startsWith(filter.value) : true;\n    },\n    // eslint-disable-next-line no-unused-vars\n    defaultSortMethod: function defaultSortMethod(a, b, desc) {\n      // force null and undefined to the bottom\n      a = a === null || a === undefined ? '' : a;\n      b = b === null || b === undefined ? '' : b; // force any string values to lowercase\n\n      a = typeof a === 'string' ? a.toLowerCase() : a;\n      b = typeof b === 'string' ? b.toLowerCase() : b; // Return either 1 or -1 to indicate a sort priority\n\n      if (a > b) {\n        return 1;\n      }\n\n      if (a < b) {\n        return -1;\n      } // returning 0, undefined or any falsey value will use subsequent sorts or\n      // the index as a tiebreaker\n\n\n      return 0;\n    },\n    // Controlled State Props\n    // page: undefined,\n    // pageSize: undefined,\n    // sorted: [],\n    // filtered: [],\n    // resized: [],\n    // expanded: {},\n    // Controlled State Callbacks\n    onPageChange: undefined,\n    onPageSizeChange: undefined,\n    onSortedChange: undefined,\n    onFilteredChange: undefined,\n    onResizedChange: undefined,\n    onExpandedChange: undefined,\n    // Pivoting\n    pivotBy: undefined,\n    // Key Constants\n    pivotValKey: '_pivotVal',\n    pivotIDKey: '_pivotID',\n    subRowsKey: '_subRows',\n    aggregatedKey: '_aggregated',\n    nestingLevelKey: '_nestingLevel',\n    originalKey: '_original',\n    indexKey: '_index',\n    groupedByPivotKey: '_groupedByPivot',\n    // Server-side Callbacks\n    onFetchData: function onFetchData() {\n      return null;\n    },\n    // Classes\n    className: '',\n    style: {},\n    // Component decorators\n    getProps: emptyObj,\n    getTableProps: emptyObj,\n    getTheadGroupProps: emptyObj,\n    getTheadGroupTrProps: emptyObj,\n    getTheadGroupThProps: emptyObj,\n    getTheadProps: emptyObj,\n    getTheadTrProps: emptyObj,\n    getTheadThProps: emptyObj,\n    getTheadFilterProps: emptyObj,\n    getTheadFilterTrProps: emptyObj,\n    getTheadFilterThProps: emptyObj,\n    getTbodyProps: emptyObj,\n    getTrGroupProps: emptyObj,\n    getTrProps: emptyObj,\n    getTdProps: emptyObj,\n    getTfootProps: emptyObj,\n    getTfootTrProps: emptyObj,\n    getTfootTdProps: emptyObj,\n    getPaginationProps: emptyObj,\n    getLoadingProps: emptyObj,\n    getNoDataProps: emptyObj,\n    getResizerProps: emptyObj,\n    // Global Column Defaults\n    column: {\n      // Renderers\n      Cell: undefined,\n      Header: undefined,\n      Footer: undefined,\n      Aggregated: undefined,\n      Pivot: undefined,\n      PivotValue: undefined,\n      Expander: undefined,\n      Filter: undefined,\n      Placeholder: undefined,\n      // All Columns\n      sortable: undefined,\n      // use table default\n      resizable: undefined,\n      // use table default\n      filterable: undefined,\n      // use table default\n      show: true,\n      minWidth: 100,\n      minResizeWidth: 11,\n      // Cells only\n      className: '',\n      style: {},\n      getProps: emptyObj,\n      // Pivot only\n      aggregate: undefined,\n      // Headers only\n      headerClassName: '',\n      headerStyle: {},\n      getHeaderProps: emptyObj,\n      // Footers only\n      footerClassName: '',\n      footerStyle: {},\n      getFooterProps: emptyObj,\n      filterMethod: undefined,\n      filterAll: false,\n      sortMethod: undefined\n    },\n    // Global Expander Column Defaults\n    expanderDefaults: {\n      sortable: false,\n      resizable: false,\n      filterable: false,\n      width: 35\n    },\n    pivotDefaults: {// extend the defaults for pivoted columns here\n    },\n    // Text\n    previousText: 'Previous',\n    nextText: 'Next',\n    loadingText: 'Loading...',\n    noDataText: 'No rows found',\n    pageText: 'Page',\n    ofText: 'of',\n    rowsText: 'rows',\n    pageJumpText: 'jump to page',\n    rowsSelectorText: 'rows per page',\n    // Components\n    TableComponent: function TableComponent(_ref) {\n      var children = _ref.children,\n          className = _ref.className,\n          rest = objectWithoutProperties(_ref, ['children', 'className']);\n      return React__default.createElement('div', _extends({\n        className: classnames('rt-table', className),\n        role: 'grid' // tabIndex='0'\n\n      }, rest), children);\n    },\n    TheadComponent: _.makeTemplateComponent('rt-thead', 'Thead'),\n    TbodyComponent: _.makeTemplateComponent('rt-tbody', 'Tbody'),\n    TrGroupComponent: function TrGroupComponent(_ref2) {\n      var children = _ref2.children,\n          className = _ref2.className,\n          rest = objectWithoutProperties(_ref2, ['children', 'className']);\n      return React__default.createElement('div', _extends({\n        className: classnames('rt-tr-group', className),\n        role: 'rowgroup'\n      }, rest), children);\n    },\n    TrComponent: function TrComponent(_ref3) {\n      var children = _ref3.children,\n          className = _ref3.className,\n          rest = objectWithoutProperties(_ref3, ['children', 'className']);\n      return React__default.createElement('div', _extends({\n        className: classnames('rt-tr', className),\n        role: 'row'\n      }, rest), children);\n    },\n    ThComponent: function ThComponent(_ref4) {\n      var toggleSort = _ref4.toggleSort,\n          className = _ref4.className,\n          children = _ref4.children,\n          rest = objectWithoutProperties(_ref4, ['toggleSort', 'className', 'children']);\n      return (// eslint-disable-next-line jsx-a11y/click-events-have-key-events\n        React__default.createElement('div', _extends({\n          className: classnames('rt-th', className),\n          onClick: function onClick(e) {\n            return toggleSort && toggleSort(e);\n          },\n          role: 'columnheader',\n          tabIndex: '-1' // Resolves eslint issues without implementing keyboard navigation incorrectly\n\n        }, rest), children)\n      );\n    },\n    TdComponent: function TdComponent(_ref5) {\n      var toggleSort = _ref5.toggleSort,\n          className = _ref5.className,\n          children = _ref5.children,\n          rest = objectWithoutProperties(_ref5, ['toggleSort', 'className', 'children']);\n      return React__default.createElement('div', _extends({\n        className: classnames('rt-td', className),\n        role: 'gridcell'\n      }, rest), children);\n    },\n    TfootComponent: _.makeTemplateComponent('rt-tfoot', 'Tfoot'),\n    FilterComponent: function FilterComponent(_ref6) {\n      var filter = _ref6.filter,\n          _onChange = _ref6.onChange,\n          column = _ref6.column;\n      return React__default.createElement('input', {\n        type: 'text',\n        style: {\n          width: '100%'\n        },\n        placeholder: column.Placeholder,\n        value: filter ? filter.value : '',\n        onChange: function onChange(event) {\n          return _onChange(event.target.value);\n        }\n      });\n    },\n    ExpanderComponent: function ExpanderComponent(_ref7) {\n      var isExpanded = _ref7.isExpanded;\n      return React__default.createElement('div', {\n        className: classnames('rt-expander', isExpanded && '-open')\n      }, \"\\u2022\");\n    },\n    PivotValueComponent: function PivotValueComponent(_ref8) {\n      var subRows = _ref8.subRows,\n          value = _ref8.value;\n      return React__default.createElement('span', null, value, ' ', subRows && '(' + subRows.length + ')');\n    },\n    AggregatedComponent: function AggregatedComponent(_ref9) {\n      var subRows = _ref9.subRows,\n          column = _ref9.column;\n      var previewValues = subRows.filter(function (d) {\n        return typeof d[column.id] !== 'undefined';\n      }).map(function (row, i) {\n        return (// eslint-disable-next-line react/no-array-index-key\n          React__default.createElement('span', {\n            key: i\n          }, row[column.id], i < subRows.length - 1 ? ', ' : '')\n        );\n      });\n      return React__default.createElement('span', null, previewValues);\n    },\n    PivotComponent: undefined,\n    // this is a computed default generated using\n    // the ExpanderComponent and PivotValueComponent at run-time in methods.js\n    PaginationComponent: ReactTablePagination,\n    PreviousComponent: undefined,\n    NextComponent: undefined,\n    LoadingComponent: function LoadingComponent(_ref10) {\n      var className = _ref10.className,\n          loading = _ref10.loading,\n          loadingText = _ref10.loadingText,\n          rest = objectWithoutProperties(_ref10, ['className', 'loading', 'loadingText']);\n      return React__default.createElement('div', _extends({\n        className: classnames('-loading', {\n          '-active': loading\n        }, className)\n      }, rest), React__default.createElement('div', {\n        className: '-loading-inner'\n      }, loadingText));\n    },\n    NoDataComponent: _.makeTemplateComponent('rt-noData', 'NoData'),\n    ResizerComponent: _.makeTemplateComponent('rt-resizer', 'Resizer'),\n    PadRowComponent: function PadRowComponent() {\n      return React__default.createElement('span', null, '\\xA0');\n    }\n  };\n  var reactIs_production_min = createCommonjsModule(function (module, exports) {\n    /** @license React v16.8.6\n     * react-is.production.min.js\n     *\n     * Copyright (c) Facebook, Inc. and its affiliates.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n    var b = \"function\" === typeof Symbol && Symbol.for,\n        c = b ? Symbol.for(\"react.element\") : 60103,\n        d = b ? Symbol.for(\"react.portal\") : 60106,\n        e = b ? Symbol.for(\"react.fragment\") : 60107,\n        f = b ? Symbol.for(\"react.strict_mode\") : 60108,\n        g = b ? Symbol.for(\"react.profiler\") : 60114,\n        h = b ? Symbol.for(\"react.provider\") : 60109,\n        k = b ? Symbol.for(\"react.context\") : 60110,\n        l = b ? Symbol.for(\"react.async_mode\") : 60111,\n        m = b ? Symbol.for(\"react.concurrent_mode\") : 60111,\n        n = b ? Symbol.for(\"react.forward_ref\") : 60112,\n        p = b ? Symbol.for(\"react.suspense\") : 60113,\n        q = b ? Symbol.for(\"react.memo\") : 60115,\n        r = b ? Symbol.for(\"react.lazy\") : 60116;\n\n    function t(a) {\n      if (\"object\" === typeof a && null !== a) {\n        var u = a.$$typeof;\n\n        switch (u) {\n          case c:\n            switch (a = a.type, a) {\n              case l:\n              case m:\n              case e:\n              case g:\n              case f:\n              case p:\n                return a;\n\n              default:\n                switch (a = a && a.$$typeof, a) {\n                  case k:\n                  case n:\n                  case h:\n                    return a;\n\n                  default:\n                    return u;\n                }\n\n            }\n\n          case r:\n          case q:\n          case d:\n            return u;\n        }\n      }\n    }\n\n    function v(a) {\n      return t(a) === m;\n    }\n\n    exports.typeOf = t;\n    exports.AsyncMode = l;\n    exports.ConcurrentMode = m;\n    exports.ContextConsumer = k;\n    exports.ContextProvider = h;\n    exports.Element = c;\n    exports.ForwardRef = n;\n    exports.Fragment = e;\n    exports.Lazy = r;\n    exports.Memo = q;\n    exports.Portal = d;\n    exports.Profiler = g;\n    exports.StrictMode = f;\n    exports.Suspense = p;\n\n    exports.isValidElementType = function (a) {\n      return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || \"object\" === typeof a && null !== a && (a.$$typeof === r || a.$$typeof === q || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n);\n    };\n\n    exports.isAsyncMode = function (a) {\n      return v(a) || t(a) === l;\n    };\n\n    exports.isConcurrentMode = v;\n\n    exports.isContextConsumer = function (a) {\n      return t(a) === k;\n    };\n\n    exports.isContextProvider = function (a) {\n      return t(a) === h;\n    };\n\n    exports.isElement = function (a) {\n      return \"object\" === typeof a && null !== a && a.$$typeof === c;\n    };\n\n    exports.isForwardRef = function (a) {\n      return t(a) === n;\n    };\n\n    exports.isFragment = function (a) {\n      return t(a) === e;\n    };\n\n    exports.isLazy = function (a) {\n      return t(a) === r;\n    };\n\n    exports.isMemo = function (a) {\n      return t(a) === q;\n    };\n\n    exports.isPortal = function (a) {\n      return t(a) === d;\n    };\n\n    exports.isProfiler = function (a) {\n      return t(a) === g;\n    };\n\n    exports.isStrictMode = function (a) {\n      return t(a) === f;\n    };\n\n    exports.isSuspense = function (a) {\n      return t(a) === p;\n    };\n  });\n  unwrapExports(reactIs_production_min);\n  var reactIs_production_min_1 = reactIs_production_min.typeOf;\n  var reactIs_production_min_2 = reactIs_production_min.AsyncMode;\n  var reactIs_production_min_3 = reactIs_production_min.ConcurrentMode;\n  var reactIs_production_min_4 = reactIs_production_min.ContextConsumer;\n  var reactIs_production_min_5 = reactIs_production_min.ContextProvider;\n  var reactIs_production_min_6 = reactIs_production_min.Element;\n  var reactIs_production_min_7 = reactIs_production_min.ForwardRef;\n  var reactIs_production_min_8 = reactIs_production_min.Fragment;\n  var reactIs_production_min_9 = reactIs_production_min.Lazy;\n  var reactIs_production_min_10 = reactIs_production_min.Memo;\n  var reactIs_production_min_11 = reactIs_production_min.Portal;\n  var reactIs_production_min_12 = reactIs_production_min.Profiler;\n  var reactIs_production_min_13 = reactIs_production_min.StrictMode;\n  var reactIs_production_min_14 = reactIs_production_min.Suspense;\n  var reactIs_production_min_15 = reactIs_production_min.isValidElementType;\n  var reactIs_production_min_16 = reactIs_production_min.isAsyncMode;\n  var reactIs_production_min_17 = reactIs_production_min.isConcurrentMode;\n  var reactIs_production_min_18 = reactIs_production_min.isContextConsumer;\n  var reactIs_production_min_19 = reactIs_production_min.isContextProvider;\n  var reactIs_production_min_20 = reactIs_production_min.isElement;\n  var reactIs_production_min_21 = reactIs_production_min.isForwardRef;\n  var reactIs_production_min_22 = reactIs_production_min.isFragment;\n  var reactIs_production_min_23 = reactIs_production_min.isLazy;\n  var reactIs_production_min_24 = reactIs_production_min.isMemo;\n  var reactIs_production_min_25 = reactIs_production_min.isPortal;\n  var reactIs_production_min_26 = reactIs_production_min.isProfiler;\n  var reactIs_production_min_27 = reactIs_production_min.isStrictMode;\n  var reactIs_production_min_28 = reactIs_production_min.isSuspense;\n  var reactIs_development = createCommonjsModule(function (module, exports) {\n    /** @license React v16.8.6\n     * react-is.development.js\n     *\n     * Copyright (c) Facebook, Inc. and its affiliates.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n    if (undefined !== \"production\") {\n      (function () {\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        }); // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n        // nor polyfill, then a plain number is used for performance.\n\n        var hasSymbol = typeof Symbol === 'function' && Symbol.for;\n        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\n        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\n        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\n        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\n        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\n        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\n        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\n        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\n        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\n        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\n        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\n        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n\n        function isValidElementType(type) {\n          return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n        }\n        /**\n         * Forked from fbjs/warning:\n         * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n         *\n         * Only change is we use console.warn instead of console.error,\n         * and do nothing when 'console' is not supported.\n         * This really simplifies the code.\n         * ---\n         * Similar to invariant but only logs a warning if the condition is not met.\n         * This can be used to log issues in development environments in critical\n         * paths. Removing the logging code for production environments will keep the\n         * same logic and follow the same code paths.\n         */\n\n\n        var lowPriorityWarning = function lowPriorityWarning() {};\n\n        {\n          var printWarning = function printWarning(format) {\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = arguments[_key];\n            }\n\n            var argIndex = 0;\n            var message = 'Warning: ' + format.replace(/%s/g, function () {\n              return args[argIndex++];\n            });\n\n            if (typeof console !== 'undefined') {\n              console.warn(message);\n            }\n\n            try {\n              // --- Welcome to debugging React ---\n              // This error was thrown as a convenience so that you can use this stack\n              // to find the callsite that caused this warning to fire.\n              throw new Error(message);\n            } catch (x) {}\n          };\n\n          lowPriorityWarning = function lowPriorityWarning(condition, format) {\n            if (format === undefined) {\n              throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n            }\n\n            if (!condition) {\n              for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n                args[_key2 - 2] = arguments[_key2];\n              }\n\n              printWarning.apply(undefined, [format].concat(args));\n            }\n          };\n        }\n        var lowPriorityWarning$1 = lowPriorityWarning;\n\n        function typeOf(object) {\n          if (typeof object === 'object' && object !== null) {\n            var $$typeof = object.$$typeof;\n\n            switch ($$typeof) {\n              case REACT_ELEMENT_TYPE:\n                var type = object.type;\n\n                switch (type) {\n                  case REACT_ASYNC_MODE_TYPE:\n                  case REACT_CONCURRENT_MODE_TYPE:\n                  case REACT_FRAGMENT_TYPE:\n                  case REACT_PROFILER_TYPE:\n                  case REACT_STRICT_MODE_TYPE:\n                  case REACT_SUSPENSE_TYPE:\n                    return type;\n\n                  default:\n                    var $$typeofType = type && type.$$typeof;\n\n                    switch ($$typeofType) {\n                      case REACT_CONTEXT_TYPE:\n                      case REACT_FORWARD_REF_TYPE:\n                      case REACT_PROVIDER_TYPE:\n                        return $$typeofType;\n\n                      default:\n                        return $$typeof;\n                    }\n\n                }\n\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PORTAL_TYPE:\n                return $$typeof;\n            }\n          }\n\n          return undefined;\n        } // AsyncMode is deprecated along with isAsyncMode\n\n\n        var AsyncMode = REACT_ASYNC_MODE_TYPE;\n        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n        var ContextConsumer = REACT_CONTEXT_TYPE;\n        var ContextProvider = REACT_PROVIDER_TYPE;\n        var Element = REACT_ELEMENT_TYPE;\n        var ForwardRef = REACT_FORWARD_REF_TYPE;\n        var Fragment = REACT_FRAGMENT_TYPE;\n        var Lazy = REACT_LAZY_TYPE;\n        var Memo = REACT_MEMO_TYPE;\n        var Portal = REACT_PORTAL_TYPE;\n        var Profiler = REACT_PROFILER_TYPE;\n        var StrictMode = REACT_STRICT_MODE_TYPE;\n        var Suspense = REACT_SUSPENSE_TYPE;\n        var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\n        function isAsyncMode(object) {\n          {\n            if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n              hasWarnedAboutDeprecatedIsAsyncMode = true;\n              lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n            }\n          }\n          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n        }\n\n        function isConcurrentMode(object) {\n          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n        }\n\n        function isContextConsumer(object) {\n          return typeOf(object) === REACT_CONTEXT_TYPE;\n        }\n\n        function isContextProvider(object) {\n          return typeOf(object) === REACT_PROVIDER_TYPE;\n        }\n\n        function isElement(object) {\n          return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n\n        function isForwardRef(object) {\n          return typeOf(object) === REACT_FORWARD_REF_TYPE;\n        }\n\n        function isFragment(object) {\n          return typeOf(object) === REACT_FRAGMENT_TYPE;\n        }\n\n        function isLazy(object) {\n          return typeOf(object) === REACT_LAZY_TYPE;\n        }\n\n        function isMemo(object) {\n          return typeOf(object) === REACT_MEMO_TYPE;\n        }\n\n        function isPortal(object) {\n          return typeOf(object) === REACT_PORTAL_TYPE;\n        }\n\n        function isProfiler(object) {\n          return typeOf(object) === REACT_PROFILER_TYPE;\n        }\n\n        function isStrictMode(object) {\n          return typeOf(object) === REACT_STRICT_MODE_TYPE;\n        }\n\n        function isSuspense(object) {\n          return typeOf(object) === REACT_SUSPENSE_TYPE;\n        }\n\n        exports.typeOf = typeOf;\n        exports.AsyncMode = AsyncMode;\n        exports.ConcurrentMode = ConcurrentMode;\n        exports.ContextConsumer = ContextConsumer;\n        exports.ContextProvider = ContextProvider;\n        exports.Element = Element;\n        exports.ForwardRef = ForwardRef;\n        exports.Fragment = Fragment;\n        exports.Lazy = Lazy;\n        exports.Memo = Memo;\n        exports.Portal = Portal;\n        exports.Profiler = Profiler;\n        exports.StrictMode = StrictMode;\n        exports.Suspense = Suspense;\n        exports.isValidElementType = isValidElementType;\n        exports.isAsyncMode = isAsyncMode;\n        exports.isConcurrentMode = isConcurrentMode;\n        exports.isContextConsumer = isContextConsumer;\n        exports.isContextProvider = isContextProvider;\n        exports.isElement = isElement;\n        exports.isForwardRef = isForwardRef;\n        exports.isFragment = isFragment;\n        exports.isLazy = isLazy;\n        exports.isMemo = isMemo;\n        exports.isPortal = isPortal;\n        exports.isProfiler = isProfiler;\n        exports.isStrictMode = isStrictMode;\n        exports.isSuspense = isSuspense;\n      })();\n    }\n  });\n  unwrapExports(reactIs_development);\n  var reactIs_development_1 = reactIs_development.typeOf;\n  var reactIs_development_2 = reactIs_development.AsyncMode;\n  var reactIs_development_3 = reactIs_development.ConcurrentMode;\n  var reactIs_development_4 = reactIs_development.ContextConsumer;\n  var reactIs_development_5 = reactIs_development.ContextProvider;\n  var reactIs_development_6 = reactIs_development.Element;\n  var reactIs_development_7 = reactIs_development.ForwardRef;\n  var reactIs_development_8 = reactIs_development.Fragment;\n  var reactIs_development_9 = reactIs_development.Lazy;\n  var reactIs_development_10 = reactIs_development.Memo;\n  var reactIs_development_11 = reactIs_development.Portal;\n  var reactIs_development_12 = reactIs_development.Profiler;\n  var reactIs_development_13 = reactIs_development.StrictMode;\n  var reactIs_development_14 = reactIs_development.Suspense;\n  var reactIs_development_15 = reactIs_development.isValidElementType;\n  var reactIs_development_16 = reactIs_development.isAsyncMode;\n  var reactIs_development_17 = reactIs_development.isConcurrentMode;\n  var reactIs_development_18 = reactIs_development.isContextConsumer;\n  var reactIs_development_19 = reactIs_development.isContextProvider;\n  var reactIs_development_20 = reactIs_development.isElement;\n  var reactIs_development_21 = reactIs_development.isForwardRef;\n  var reactIs_development_22 = reactIs_development.isFragment;\n  var reactIs_development_23 = reactIs_development.isLazy;\n  var reactIs_development_24 = reactIs_development.isMemo;\n  var reactIs_development_25 = reactIs_development.isPortal;\n  var reactIs_development_26 = reactIs_development.isProfiler;\n  var reactIs_development_27 = reactIs_development.isStrictMode;\n  var reactIs_development_28 = reactIs_development.isSuspense;\n  var reactIs = createCommonjsModule(function (module) {\n    if (undefined === 'production') {\n      module.exports = reactIs_production_min;\n    } else {\n      module.exports = reactIs_development;\n    }\n  });\n  /*\n  object-assign\n  (c) Sindre Sorhus\n  @license MIT\n  */\n\n  /* eslint-disable no-unused-vars */\n\n  var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n  function toObject(val) {\n    if (val === null || val === undefined) {\n      throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n\n    return Object(val);\n  }\n\n  function shouldUseNative() {\n    try {\n      if (!Object.assign) {\n        return false;\n      } // Detect buggy property enumeration order in older V8 versions.\n      // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n      var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n      test1[5] = 'de';\n\n      if (Object.getOwnPropertyNames(test1)[0] === '5') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test2 = {};\n\n      for (var i = 0; i < 10; i++) {\n        test2['_' + String.fromCharCode(i)] = i;\n      }\n\n      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n        return test2[n];\n      });\n\n      if (order2.join('') !== '0123456789') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test3 = {};\n      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n        test3[letter] = letter;\n      });\n\n      if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      // We don't expect any of the above to throw, but better to be safe.\n      return false;\n    }\n  }\n\n  var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n    var from;\n    var to = toObject(target);\n    var symbols;\n\n    for (var s = 1; s < arguments.length; s++) {\n      from = Object(arguments[s]);\n\n      for (var key in from) {\n        if (hasOwnProperty.call(from, key)) {\n          to[key] = from[key];\n        }\n      }\n\n      if (getOwnPropertySymbols) {\n        symbols = getOwnPropertySymbols(from);\n\n        for (var i = 0; i < symbols.length; i++) {\n          if (propIsEnumerable.call(from, symbols[i])) {\n            to[symbols[i]] = from[symbols[i]];\n          }\n        }\n      }\n    }\n\n    return to;\n  };\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n  var ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\n  var printWarning = function printWarning() {};\n\n  if (undefined !== 'production') {\n    var ReactPropTypesSecret$2 = ReactPropTypesSecret_1;\n    var loggedTypeFailures = {};\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    printWarning = function printWarning(text) {\n      var message = 'Warning: ' + text;\n\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n  }\n  /**\n   * Assert that the values match with the type specs.\n   * Error messages are memorized and will only be shown once.\n   *\n   * @param {object} typeSpecs Map of name to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @param {string} componentName Name of the component for error messages.\n   * @param {?Function} getStack Returns the component stack.\n   * @private\n   */\n\n\n  function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n    if (undefined !== 'production') {\n      for (var typeSpecName in typeSpecs) {\n        if (has(typeSpecs, typeSpecName)) {\n          var error; // Prop type validation may throw. In case they do, we don't want to\n          // fail the render phase where it didn't fail before. So we log it.\n          // After these have been cleaned up, we'll let them throw.\n\n          try {\n            // This is intentionally an invariant that gets caught. It's the same\n            // behavior as without this statement except with a better message.\n            if (typeof typeSpecs[typeSpecName] !== 'function') {\n              var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');\n              err.name = 'Invariant Violation';\n              throw err;\n            }\n\n            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$2);\n          } catch (ex) {\n            error = ex;\n          }\n\n          if (error && !(error instanceof Error)) {\n            printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');\n          }\n\n          if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n            // Only monitor this failure once because there tends to be a lot of the\n            // same error.\n            loggedTypeFailures[error.message] = true;\n            var stack = getStack ? getStack() : '';\n            printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Resets warning cache when testing.\n   *\n   * @private\n   */\n\n\n  checkPropTypes.resetWarningCache = function () {\n    if (undefined !== 'production') {\n      loggedTypeFailures = {};\n    }\n  };\n\n  var checkPropTypes_1 = checkPropTypes;\n  var has$1 = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  var printWarning$1 = function printWarning$1() {};\n\n  if (undefined !== 'production') {\n    printWarning$1 = function printWarning$1(text) {\n      var message = 'Warning: ' + text;\n\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n  }\n\n  function emptyFunctionThatReturnsNull() {\n    return null;\n  }\n\n  var factoryWithTypeCheckers = function factoryWithTypeCheckers(isValidElement, throwOnDirectAccess) {\n    /* global Symbol */\n    var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n    /**\n     * Returns the iterator method function contained on the iterable object.\n     *\n     * Be sure to invoke the function with the iterable as context:\n     *\n     *     var iteratorFn = getIteratorFn(myIterable);\n     *     if (iteratorFn) {\n     *       var iterator = iteratorFn.call(myIterable);\n     *       ...\n     *     }\n     *\n     * @param {?object} maybeIterable\n     * @return {?function}\n     */\n\n    function getIteratorFn(maybeIterable) {\n      var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n      if (typeof iteratorFn === 'function') {\n        return iteratorFn;\n      }\n    }\n    /**\n     * Collection of methods that allow declaration and validation of props that are\n     * supplied to React components. Example usage:\n     *\n     *   var Props = require('ReactPropTypes');\n     *   var MyArticle = React.createClass({\n     *     propTypes: {\n     *       // An optional string prop named \"description\".\n     *       description: Props.string,\n     *\n     *       // A required enum prop named \"category\".\n     *       category: Props.oneOf(['News','Photos']).isRequired,\n     *\n     *       // A prop named \"dialog\" that requires an instance of Dialog.\n     *       dialog: Props.instanceOf(Dialog).isRequired\n     *     },\n     *     render: function() { ... }\n     *   });\n     *\n     * A more formal specification of how these methods are used:\n     *\n     *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n     *   decl := ReactPropTypes.{type}(.isRequired)?\n     *\n     * Each and every declaration produces a function with the same signature. This\n     * allows the creation of custom validation functions. For example:\n     *\n     *  var MyLink = React.createClass({\n     *    propTypes: {\n     *      // An optional string or URI prop named \"href\".\n     *      href: function(props, propName, componentName) {\n     *        var propValue = props[propName];\n     *        if (propValue != null && typeof propValue !== 'string' &&\n     *            !(propValue instanceof URI)) {\n     *          return new Error(\n     *            'Expected a string or an URI for ' + propName + ' in ' +\n     *            componentName\n     *          );\n     *        }\n     *      }\n     *    },\n     *    render: function() {...}\n     *  });\n     *\n     * @internal\n     */\n\n\n    var ANONYMOUS = '<<anonymous>>'; // Important!\n    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n    var ReactPropTypes = {\n      array: createPrimitiveTypeChecker('array'),\n      bool: createPrimitiveTypeChecker('boolean'),\n      func: createPrimitiveTypeChecker('function'),\n      number: createPrimitiveTypeChecker('number'),\n      object: createPrimitiveTypeChecker('object'),\n      string: createPrimitiveTypeChecker('string'),\n      symbol: createPrimitiveTypeChecker('symbol'),\n      any: createAnyTypeChecker(),\n      arrayOf: createArrayOfTypeChecker,\n      element: createElementTypeChecker(),\n      elementType: createElementTypeTypeChecker(),\n      instanceOf: createInstanceTypeChecker,\n      node: createNodeChecker(),\n      objectOf: createObjectOfTypeChecker,\n      oneOf: createEnumTypeChecker,\n      oneOfType: createUnionTypeChecker,\n      shape: createShapeTypeChecker,\n      exact: createStrictShapeTypeChecker\n    };\n    /**\n     * inlined Object.is polyfill to avoid requiring consumers ship their own\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n     */\n\n    /*eslint-disable no-self-compare*/\n\n    function is(x, y) {\n      // SameValue algorithm\n      if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return x !== 0 || 1 / x === 1 / y;\n      } else {\n        // Step 6.a: NaN == NaN\n        return x !== x && y !== y;\n      }\n    }\n    /*eslint-enable no-self-compare*/\n\n    /**\n     * We use an Error-like object for backward compatibility as people may call\n     * PropTypes directly and inspect their output. However, we don't use real\n     * Errors anymore. We don't inspect their stack anyway, and creating them\n     * is prohibitively expensive if they are created too often, such as what\n     * happens in oneOfType() for any type before the one that matched.\n     */\n\n\n    function PropTypeError(message) {\n      this.message = message;\n      this.stack = '';\n    } // Make `instanceof Error` still work for returned errors.\n\n\n    PropTypeError.prototype = Error.prototype;\n\n    function createChainableTypeChecker(validate) {\n      if (undefined !== 'production') {\n        var manualPropTypeCallCache = {};\n        var manualPropTypeWarningCount = 0;\n      }\n\n      function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n        componentName = componentName || ANONYMOUS;\n        propFullName = propFullName || propName;\n\n        if (secret !== ReactPropTypesSecret_1) {\n          if (throwOnDirectAccess) {\n            // New behavior only for users of `prop-types` package\n            var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n            err.name = 'Invariant Violation';\n            throw err;\n          } else if (undefined !== 'production' && typeof console !== 'undefined') {\n            // Old behavior for people using React.PropTypes\n            var cacheKey = componentName + ':' + propName;\n\n            if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3) {\n              printWarning$1('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');\n              manualPropTypeCallCache[cacheKey] = true;\n              manualPropTypeWarningCount++;\n            }\n          }\n        }\n\n        if (props[propName] == null) {\n          if (isRequired) {\n            if (props[propName] === null) {\n              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n            }\n\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n          }\n\n          return null;\n        } else {\n          return validate(props, propName, componentName, location, propFullName);\n        }\n      }\n\n      var chainedCheckType = checkType.bind(null, false);\n      chainedCheckType.isRequired = checkType.bind(null, true);\n      return chainedCheckType;\n    }\n\n    function createPrimitiveTypeChecker(expectedType) {\n      function validate(props, propName, componentName, location, propFullName, secret) {\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== expectedType) {\n          // `propValue` being instance of, say, date/regexp, pass the 'object'\n          // check, but we can offer a more precise error message here rather than\n          // 'of type `object`'.\n          var preciseType = getPreciseType(propValue);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createAnyTypeChecker() {\n      return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n    }\n\n    function createArrayOfTypeChecker(typeChecker) {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (typeof typeChecker !== 'function') {\n          return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n        }\n\n        var propValue = props[propName];\n\n        if (!Array.isArray(propValue)) {\n          var propType = getPropType(propValue);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n        }\n\n        for (var i = 0; i < propValue.length; i++) {\n          var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);\n\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createElementTypeChecker() {\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n\n        if (!isValidElement(propValue)) {\n          var propType = getPropType(propValue);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createElementTypeTypeChecker() {\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n\n        if (!reactIs.isValidElementType(propValue)) {\n          var propType = getPropType(propValue);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createInstanceTypeChecker(expectedClass) {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (!(props[propName] instanceof expectedClass)) {\n          var expectedClassName = expectedClass.name || ANONYMOUS;\n          var actualClassName = getClassName(props[propName]);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createEnumTypeChecker(expectedValues) {\n      if (!Array.isArray(expectedValues)) {\n        if (undefined !== 'production') {\n          if (arguments.length > 1) {\n            printWarning$1('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');\n          } else {\n            printWarning$1('Invalid argument supplied to oneOf, expected an array.');\n          }\n        }\n\n        return emptyFunctionThatReturnsNull;\n      }\n\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n\n        for (var i = 0; i < expectedValues.length; i++) {\n          if (is(propValue, expectedValues[i])) {\n            return null;\n          }\n        }\n\n        var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n          var type = getPreciseType(value);\n\n          if (type === 'symbol') {\n            return String(value);\n          }\n\n          return value;\n        });\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createObjectOfTypeChecker(typeChecker) {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (typeof typeChecker !== 'function') {\n          return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n        }\n\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== 'object') {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n        }\n\n        for (var key in propValue) {\n          if (has$1(propValue, key)) {\n            var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n            if (error instanceof Error) {\n              return error;\n            }\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createUnionTypeChecker(arrayOfTypeCheckers) {\n      if (!Array.isArray(arrayOfTypeCheckers)) {\n        undefined !== 'production' ? printWarning$1('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n        return emptyFunctionThatReturnsNull;\n      }\n\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n\n        if (typeof checker !== 'function') {\n          printWarning$1('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');\n          return emptyFunctionThatReturnsNull;\n        }\n      }\n\n      function validate(props, propName, componentName, location, propFullName) {\n        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n          var checker = arrayOfTypeCheckers[i];\n\n          if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {\n            return null;\n          }\n        }\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createNodeChecker() {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (!isNode(props[propName])) {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createShapeTypeChecker(shapeTypes) {\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== 'object') {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n        }\n\n        for (var key in shapeTypes) {\n          var checker = shapeTypes[key];\n\n          if (!checker) {\n            continue;\n          }\n\n          var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n          if (error) {\n            return error;\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createStrictShapeTypeChecker(shapeTypes) {\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== 'object') {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n        } // We need to check all keys in case some are required but missing from\n        // props.\n\n\n        var allKeys = objectAssign({}, props[propName], shapeTypes);\n\n        for (var key in allKeys) {\n          var checker = shapeTypes[key];\n\n          if (!checker) {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n          }\n\n          var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n          if (error) {\n            return error;\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function isNode(propValue) {\n      switch (typeof propValue) {\n        case 'number':\n        case 'string':\n        case 'undefined':\n          return true;\n\n        case 'boolean':\n          return !propValue;\n\n        case 'object':\n          if (Array.isArray(propValue)) {\n            return propValue.every(isNode);\n          }\n\n          if (propValue === null || isValidElement(propValue)) {\n            return true;\n          }\n\n          var iteratorFn = getIteratorFn(propValue);\n\n          if (iteratorFn) {\n            var iterator = iteratorFn.call(propValue);\n            var step;\n\n            if (iteratorFn !== propValue.entries) {\n              while (!(step = iterator.next()).done) {\n                if (!isNode(step.value)) {\n                  return false;\n                }\n              }\n            } else {\n              // Iterator will provide entry [k,v] tuples rather than values.\n              while (!(step = iterator.next()).done) {\n                var entry = step.value;\n\n                if (entry) {\n                  if (!isNode(entry[1])) {\n                    return false;\n                  }\n                }\n              }\n            }\n          } else {\n            return false;\n          }\n\n          return true;\n\n        default:\n          return false;\n      }\n    }\n\n    function isSymbol(propType, propValue) {\n      // Native Symbol.\n      if (propType === 'symbol') {\n        return true;\n      } // falsy value can't be a Symbol\n\n\n      if (!propValue) {\n        return false;\n      } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n      if (propValue['@@toStringTag'] === 'Symbol') {\n        return true;\n      } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n      if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n        return true;\n      }\n\n      return false;\n    } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n    function getPropType(propValue) {\n      var propType = typeof propValue;\n\n      if (Array.isArray(propValue)) {\n        return 'array';\n      }\n\n      if (propValue instanceof RegExp) {\n        // Old webkits (at least until Android 4.0) return 'function' rather than\n        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n        // passes PropTypes.object.\n        return 'object';\n      }\n\n      if (isSymbol(propType, propValue)) {\n        return 'symbol';\n      }\n\n      return propType;\n    } // This handles more types than `getPropType`. Only used for error messages.\n    // See `createPrimitiveTypeChecker`.\n\n\n    function getPreciseType(propValue) {\n      if (typeof propValue === 'undefined' || propValue === null) {\n        return '' + propValue;\n      }\n\n      var propType = getPropType(propValue);\n\n      if (propType === 'object') {\n        if (propValue instanceof Date) {\n          return 'date';\n        } else if (propValue instanceof RegExp) {\n          return 'regexp';\n        }\n      }\n\n      return propType;\n    } // Returns a string that is postfixed to a warning about an invalid type.\n    // For example, \"undefined\" or \"of type array\"\n\n\n    function getPostfixForTypeWarning(value) {\n      var type = getPreciseType(value);\n\n      switch (type) {\n        case 'array':\n        case 'object':\n          return 'an ' + type;\n\n        case 'boolean':\n        case 'date':\n        case 'regexp':\n          return 'a ' + type;\n\n        default:\n          return type;\n      }\n    } // Returns class name of the object, if any.\n\n\n    function getClassName(propValue) {\n      if (!propValue.constructor || !propValue.constructor.name) {\n        return ANONYMOUS;\n      }\n\n      return propValue.constructor.name;\n    }\n\n    ReactPropTypes.checkPropTypes = checkPropTypes_1;\n    ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n\n  function emptyFunction() {}\n\n  function emptyFunctionWithReset() {}\n\n  emptyFunctionWithReset.resetWarningCache = emptyFunction;\n\n  var factoryWithThrowingShims = function factoryWithThrowingShims() {\n    function shim(props, propName, componentName, location, propFullName, secret) {\n      if (secret === ReactPropTypesSecret_1) {\n        // It is still safe when called from React.\n        return;\n      }\n\n      var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n      err.name = 'Invariant Violation';\n      throw err;\n    }\n\n    shim.isRequired = shim;\n\n    function getShim() {\n      return shim;\n    } // Important!\n    // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n\n    var ReactPropTypes = {\n      array: shim,\n      bool: shim,\n      func: shim,\n      number: shim,\n      object: shim,\n      string: shim,\n      symbol: shim,\n      any: shim,\n      arrayOf: getShim,\n      element: shim,\n      elementType: shim,\n      instanceOf: getShim,\n      node: shim,\n      objectOf: getShim,\n      oneOf: getShim,\n      oneOfType: getShim,\n      shape: getShim,\n      exact: getShim,\n      checkPropTypes: emptyFunctionWithReset,\n      resetWarningCache: emptyFunction\n    };\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n\n  var propTypes = createCommonjsModule(function (module) {\n    /**\n     * Copyright (c) 2013-present, Facebook, Inc.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n    if (undefined !== 'production') {\n      var ReactIs = reactIs; // By explicitly using `prop-types` you are opting into new development behavior.\n      // http://fb.me/prop-types-in-prod\n\n      var throwOnDirectAccess = true;\n      module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);\n    } else {\n      // By explicitly using `prop-types` you are opting into new production behavior.\n      // http://fb.me/prop-types-in-prod\n      module.exports = factoryWithThrowingShims();\n    }\n  });\n  var propTypes$1 = {\n    // General\n    data: propTypes.any,\n    loading: propTypes.bool,\n    showPagination: propTypes.bool,\n    showPaginationTop: propTypes.bool,\n    showPaginationBottom: propTypes.bool,\n    showPageSizeOptions: propTypes.bool,\n    pageSizeOptions: propTypes.array,\n    defaultPageSize: propTypes.number,\n    showPageJump: propTypes.bool,\n    collapseOnSortingChange: propTypes.bool,\n    collapseOnPageChange: propTypes.bool,\n    collapseOnDataChange: propTypes.bool,\n    freezeWhenExpanded: propTypes.bool,\n    sortable: propTypes.bool,\n    resizable: propTypes.bool,\n    filterable: propTypes.bool,\n    defaultSortDesc: propTypes.bool,\n    defaultSorted: propTypes.array,\n    defaultFiltered: propTypes.array,\n    defaultResized: propTypes.array,\n    defaultExpanded: propTypes.object,\n    defaultFilterMethod: propTypes.func,\n    defaultSortMethod: propTypes.func,\n    // Controlled State Callbacks\n    onPageChange: propTypes.func,\n    onPageSizeChange: propTypes.func,\n    onSortedChange: propTypes.func,\n    onFilteredChange: propTypes.func,\n    onResizedChange: propTypes.func,\n    onExpandedChange: propTypes.func,\n    // Pivoting\n    pivotBy: propTypes.array,\n    // Key Constants\n    pivotValKey: propTypes.string,\n    pivotIDKey: propTypes.string,\n    subRowsKey: propTypes.string,\n    aggregatedKey: propTypes.string,\n    nestingLevelKey: propTypes.string,\n    originalKey: propTypes.string,\n    indexKey: propTypes.string,\n    groupedByPivotKey: propTypes.string,\n    // Server-side Callbacks\n    onFetchData: propTypes.func,\n    // Classes\n    className: propTypes.string,\n    style: propTypes.object,\n    // Component decorators\n    getProps: propTypes.func,\n    getTableProps: propTypes.func,\n    getTheadGroupProps: propTypes.func,\n    getTheadGroupTrProps: propTypes.func,\n    getTheadGroupThProps: propTypes.func,\n    getTheadProps: propTypes.func,\n    getTheadTrProps: propTypes.func,\n    getTheadThProps: propTypes.func,\n    getTheadFilterProps: propTypes.func,\n    getTheadFilterTrProps: propTypes.func,\n    getTheadFilterThProps: propTypes.func,\n    getTbodyProps: propTypes.func,\n    getTrGroupProps: propTypes.func,\n    getTrProps: propTypes.func,\n    getTdProps: propTypes.func,\n    getTfootProps: propTypes.func,\n    getTfootTrProps: propTypes.func,\n    getTfootTdProps: propTypes.func,\n    getPaginationProps: propTypes.func,\n    getLoadingProps: propTypes.func,\n    getNoDataProps: propTypes.func,\n    getResizerProps: propTypes.func,\n    // Global Column Defaults\n    columns: propTypes.arrayOf(propTypes.shape({\n      // Renderers\n      Cell: propTypes.oneOfType([propTypes.element, propTypes.string, propTypes.func]),\n      Header: propTypes.oneOfType([propTypes.element, propTypes.string, propTypes.func]),\n      Footer: propTypes.oneOfType([propTypes.element, propTypes.string, propTypes.func]),\n      Aggregated: propTypes.oneOfType([propTypes.element, propTypes.string, propTypes.func]),\n      Pivot: propTypes.oneOfType([propTypes.element, propTypes.string, propTypes.func]),\n      PivotValue: propTypes.oneOfType([propTypes.element, propTypes.string, propTypes.func]),\n      Expander: propTypes.oneOfType([propTypes.element, propTypes.string, propTypes.func]),\n      Filter: propTypes.oneOfType([propTypes.element, propTypes.func]),\n      // All Columns\n      sortable: propTypes.bool,\n      // use table default\n      resizable: propTypes.bool,\n      // use table default\n      filterable: propTypes.bool,\n      // use table default\n      show: propTypes.bool,\n      minWidth: propTypes.number,\n      minResizeWidth: propTypes.number,\n      // Cells only\n      className: propTypes.string,\n      style: propTypes.object,\n      getProps: propTypes.func,\n      // Pivot only\n      aggregate: propTypes.func,\n      // Headers only\n      headerClassName: propTypes.string,\n      headerStyle: propTypes.object,\n      getHeaderProps: propTypes.func,\n      // Footers only\n      footerClassName: propTypes.string,\n      footerStyle: propTypes.object,\n      getFooterProps: propTypes.func,\n      filterMethod: propTypes.func,\n      filterAll: propTypes.bool,\n      sortMethod: propTypes.func\n    })),\n    // Global Expander Column Defaults\n    expanderDefaults: propTypes.shape({\n      sortable: propTypes.bool,\n      resizable: propTypes.bool,\n      filterable: propTypes.bool,\n      width: propTypes.number\n    }),\n    pivotDefaults: propTypes.object,\n    // Text\n    previousText: propTypes.node,\n    nextText: propTypes.node,\n    loadingText: propTypes.node,\n    noDataText: propTypes.node,\n    pageText: propTypes.node,\n    ofText: propTypes.node,\n    rowsText: propTypes.node,\n    pageJumpText: propTypes.node,\n    rowsSelectorText: propTypes.node,\n    // Components\n    TableComponent: propTypes.elementType,\n    TheadComponent: propTypes.elementType,\n    TbodyComponent: propTypes.elementType,\n    TrGroupComponent: propTypes.elementType,\n    TrComponent: propTypes.elementType,\n    ThComponent: propTypes.elementType,\n    TdComponent: propTypes.elementType,\n    TfootComponent: propTypes.elementType,\n    FilterComponent: propTypes.elementType,\n    ExpanderComponent: propTypes.elementType,\n    PivotValueComponent: propTypes.elementType,\n    AggregatedComponent: propTypes.elementType,\n    // this is a computed default generated using\n    PivotComponent: propTypes.elementType,\n    // the ExpanderComponent and PivotValueComponent at run-time in methods.js\n    PaginationComponent: propTypes.elementType,\n    PreviousComponent: propTypes.elementType,\n    NextComponent: propTypes.elementType,\n    LoadingComponent: propTypes.elementType,\n    NoDataComponent: propTypes.elementType,\n    ResizerComponent: propTypes.elementType,\n    PadRowComponent: propTypes.elementType\n  }; //\n\n  var ReactTableDefaults = defaultProps;\n\n  var ReactTable = function (_Methods) {\n    inherits(ReactTable, _Methods);\n\n    function ReactTable(props) {\n      classCallCheck(this, ReactTable);\n\n      var _this = possibleConstructorReturn(this, (ReactTable.__proto__ || Object.getPrototypeOf(ReactTable)).call(this));\n\n      _this.getResolvedState = _this.getResolvedState.bind(_this);\n      _this.getDataModel = _this.getDataModel.bind(_this);\n      _this.getSortedData = _this.getSortedData.bind(_this);\n      _this.fireFetchData = _this.fireFetchData.bind(_this);\n      _this.getPropOrState = _this.getPropOrState.bind(_this);\n      _this.getStateOrProp = _this.getStateOrProp.bind(_this);\n      _this.filterData = _this.filterData.bind(_this);\n      _this.sortData = _this.sortData.bind(_this);\n      _this.getMinRows = _this.getMinRows.bind(_this);\n      _this.onPageChange = _this.onPageChange.bind(_this);\n      _this.onPageSizeChange = _this.onPageSizeChange.bind(_this);\n      _this.sortColumn = _this.sortColumn.bind(_this);\n      _this.filterColumn = _this.filterColumn.bind(_this);\n      _this.resizeColumnStart = _this.resizeColumnStart.bind(_this);\n      _this.resizeColumnEnd = _this.resizeColumnEnd.bind(_this);\n      _this.resizeColumnMoving = _this.resizeColumnMoving.bind(_this);\n      _this.state = {\n        page: props.defaultPage,\n        pageSize: props.defaultPageSize,\n        sorted: props.defaultSorted,\n        expanded: props.defaultExpanded,\n        filtered: props.defaultFiltered,\n        resized: props.defaultResized,\n        currentlyResizing: false,\n        skipNextSort: false\n      };\n      return _this;\n    }\n\n    createClass(ReactTable, [{\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        var resolvedState = this.getResolvedState();\n        var children = resolvedState.children,\n            className = resolvedState.className,\n            style = resolvedState.style,\n            getProps = resolvedState.getProps,\n            getTableProps = resolvedState.getTableProps,\n            getTheadGroupProps = resolvedState.getTheadGroupProps,\n            getTheadGroupTrProps = resolvedState.getTheadGroupTrProps,\n            getTheadGroupThProps = resolvedState.getTheadGroupThProps,\n            getTheadProps = resolvedState.getTheadProps,\n            getTheadTrProps = resolvedState.getTheadTrProps,\n            getTheadThProps = resolvedState.getTheadThProps,\n            getTheadFilterProps = resolvedState.getTheadFilterProps,\n            getTheadFilterTrProps = resolvedState.getTheadFilterTrProps,\n            getTheadFilterThProps = resolvedState.getTheadFilterThProps,\n            getTbodyProps = resolvedState.getTbodyProps,\n            getTrGroupProps = resolvedState.getTrGroupProps,\n            getTrProps = resolvedState.getTrProps,\n            getTdProps = resolvedState.getTdProps,\n            getTfootProps = resolvedState.getTfootProps,\n            getTfootTrProps = resolvedState.getTfootTrProps,\n            getTfootTdProps = resolvedState.getTfootTdProps,\n            getPaginationProps = resolvedState.getPaginationProps,\n            getLoadingProps = resolvedState.getLoadingProps,\n            getNoDataProps = resolvedState.getNoDataProps,\n            getResizerProps = resolvedState.getResizerProps,\n            showPagination = resolvedState.showPagination,\n            showPaginationTop = resolvedState.showPaginationTop,\n            showPaginationBottom = resolvedState.showPaginationBottom,\n            manual = resolvedState.manual,\n            loadingText = resolvedState.loadingText,\n            noDataText = resolvedState.noDataText,\n            sortable = resolvedState.sortable,\n            multiSort = resolvedState.multiSort,\n            resizable = resolvedState.resizable,\n            filterable = resolvedState.filterable,\n            pivotIDKey = resolvedState.pivotIDKey,\n            pivotValKey = resolvedState.pivotValKey,\n            pivotBy = resolvedState.pivotBy,\n            subRowsKey = resolvedState.subRowsKey,\n            aggregatedKey = resolvedState.aggregatedKey,\n            originalKey = resolvedState.originalKey,\n            indexKey = resolvedState.indexKey,\n            groupedByPivotKey = resolvedState.groupedByPivotKey,\n            loading = resolvedState.loading,\n            pageSize = resolvedState.pageSize,\n            page = resolvedState.page,\n            sorted = resolvedState.sorted,\n            filtered = resolvedState.filtered,\n            resized = resolvedState.resized,\n            expanded = resolvedState.expanded,\n            pages = resolvedState.pages,\n            onExpandedChange = resolvedState.onExpandedChange,\n            TableComponent = resolvedState.TableComponent,\n            TheadComponent = resolvedState.TheadComponent,\n            TbodyComponent = resolvedState.TbodyComponent,\n            TrGroupComponent = resolvedState.TrGroupComponent,\n            TrComponent = resolvedState.TrComponent,\n            ThComponent = resolvedState.ThComponent,\n            TdComponent = resolvedState.TdComponent,\n            TfootComponent = resolvedState.TfootComponent,\n            PaginationComponent = resolvedState.PaginationComponent,\n            LoadingComponent = resolvedState.LoadingComponent,\n            SubComponent = resolvedState.SubComponent,\n            NoDataComponent = resolvedState.NoDataComponent,\n            ResizerComponent = resolvedState.ResizerComponent,\n            ExpanderComponent = resolvedState.ExpanderComponent,\n            PivotValueComponent = resolvedState.PivotValueComponent,\n            PivotComponent = resolvedState.PivotComponent,\n            AggregatedComponent = resolvedState.AggregatedComponent,\n            FilterComponent = resolvedState.FilterComponent,\n            PadRowComponent = resolvedState.PadRowComponent,\n            resolvedData = resolvedState.resolvedData,\n            allVisibleColumns = resolvedState.allVisibleColumns,\n            headerGroups = resolvedState.headerGroups,\n            hasHeaderGroups = resolvedState.hasHeaderGroups,\n            sortedData = resolvedState.sortedData,\n            currentlyResizing = resolvedState.currentlyResizing; // Pagination\n\n        var startRow = pageSize * page;\n        var endRow = startRow + pageSize;\n        var pageRows = manual ? resolvedData : sortedData.slice(startRow, endRow);\n        var minRows = this.getMinRows();\n\n        var padRows = _.range(Math.max(minRows - pageRows.length, 0));\n\n        var hasColumnFooter = allVisibleColumns.some(function (d) {\n          return d.Footer;\n        });\n        var hasFilters = filterable || allVisibleColumns.some(function (d) {\n          return d.filterable;\n        });\n\n        var recurseRowsViewIndex = function recurseRowsViewIndex(rows) {\n          var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n          var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n          return [rows.map(function (row, i) {\n            index += 1;\n\n            var rowWithViewIndex = _extends({}, row, {\n              _viewIndex: index\n            });\n\n            var newPath = path.concat([i]);\n\n            if (rowWithViewIndex[subRowsKey] && _.get(expanded, newPath)) {\n              var _recurseRowsViewIndex = recurseRowsViewIndex(rowWithViewIndex[subRowsKey], newPath, index);\n\n              var _recurseRowsViewIndex2 = slicedToArray(_recurseRowsViewIndex, 2);\n\n              rowWithViewIndex[subRowsKey] = _recurseRowsViewIndex2[0];\n              index = _recurseRowsViewIndex2[1];\n            }\n\n            return rowWithViewIndex;\n          }), index];\n        };\n\n        var _recurseRowsViewIndex3 = recurseRowsViewIndex(pageRows);\n\n        var _recurseRowsViewIndex4 = slicedToArray(_recurseRowsViewIndex3, 1);\n\n        pageRows = _recurseRowsViewIndex4[0];\n        var canPrevious = page > 0;\n        var canNext = page + 1 < pages;\n\n        var rowMinWidth = _.sum(allVisibleColumns.map(function (d) {\n          var resizedColumn = resized.find(function (x) {\n            return x.id === d.id;\n          }) || {};\n          return _.getFirstDefined(resizedColumn.value, d.width, d.minWidth);\n        }));\n\n        var rowIndex = -1;\n\n        var finalState = _extends({}, resolvedState, {\n          startRow: startRow,\n          endRow: endRow,\n          pageRows: pageRows,\n          minRows: minRows,\n          padRows: padRows,\n          hasColumnFooter: hasColumnFooter,\n          canPrevious: canPrevious,\n          canNext: canNext,\n          rowMinWidth: rowMinWidth\n        });\n\n        var rootProps = _.splitProps(getProps(finalState, undefined, undefined, this));\n\n        var tableProps = _.splitProps(getTableProps(finalState, undefined, undefined, this));\n\n        var tBodyProps = _.splitProps(getTbodyProps(finalState, undefined, undefined, this));\n\n        var loadingProps = getLoadingProps(finalState, undefined, undefined, this);\n        var noDataProps = getNoDataProps(finalState, undefined, undefined, this); // Visual Components\n\n        var makeHeaderGroup = function makeHeaderGroup(column, i) {\n          var resizedValue = function resizedValue(col) {\n            return (resized.find(function (x) {\n              return x.id === col.id;\n            }) || {}).value;\n          };\n\n          var flex = _.sum(column.columns.map(function (col) {\n            return col.width || resizedValue(col) ? 0 : col.minWidth;\n          }));\n\n          var width = _.sum(column.columns.map(function (col) {\n            return _.getFirstDefined(resizedValue(col), col.width, col.minWidth);\n          }));\n\n          var maxWidth = _.sum(column.columns.map(function (col) {\n            return _.getFirstDefined(resizedValue(col), col.width, col.maxWidth);\n          }));\n\n          var theadGroupThProps = _.splitProps(getTheadGroupThProps(finalState, undefined, column, _this2));\n\n          var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n          var classes = [column.headerClassName, theadGroupThProps.className, columnHeaderProps.className];\n\n          var styles = _extends({}, column.headerStyle, theadGroupThProps.style, columnHeaderProps.style);\n\n          var rest = _extends({}, theadGroupThProps.rest, columnHeaderProps.rest);\n\n          var flexStyles = {\n            flex: flex + ' 0 auto',\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth)\n          };\n          return React__default.createElement(ThComponent, _extends({\n            key: i + '-' + column.id,\n            className: classnames(classes),\n            style: _extends({}, styles, flexStyles)\n          }, rest), _.normalizeComponent(column.Header, {\n            data: sortedData,\n            column: column\n          }));\n        };\n\n        var makeHeaderGroups = function makeHeaderGroups() {\n          var theadGroupProps = _.splitProps(getTheadGroupProps(finalState, undefined, undefined, _this2));\n\n          var theadGroupTrProps = _.splitProps(getTheadGroupTrProps(finalState, undefined, undefined, _this2));\n\n          return React__default.createElement(TheadComponent, _extends({\n            className: classnames('-headerGroups', theadGroupProps.className),\n            style: _extends({}, theadGroupProps.style, {\n              minWidth: rowMinWidth + 'px'\n            })\n          }, theadGroupProps.rest), React__default.createElement(TrComponent, _extends({\n            className: theadGroupTrProps.className,\n            style: theadGroupTrProps.style\n          }, theadGroupTrProps.rest), headerGroups.map(makeHeaderGroup)));\n        };\n\n        var makeHeader = function makeHeader(column, i) {\n          var resizedCol = resized.find(function (x) {\n            return x.id === column.id;\n          }) || {};\n          var sort = sorted.find(function (d) {\n            return d.id === column.id;\n          });\n          var show = typeof column.show === 'function' ? column.show() : column.show;\n\n          var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n          var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n          var theadThProps = _.splitProps(getTheadThProps(finalState, undefined, column, _this2));\n\n          var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n          var classes = [column.headerClassName, theadThProps.className, columnHeaderProps.className];\n\n          var styles = _extends({}, column.headerStyle, theadThProps.style, columnHeaderProps.style);\n\n          var rest = _extends({}, theadThProps.rest, columnHeaderProps.rest);\n\n          var isResizable = _.getFirstDefined(column.resizable, resizable, false);\n\n          var resizer = isResizable ? React__default.createElement(ResizerComponent, _extends({\n            onMouseDown: function onMouseDown(e) {\n              return _this2.resizeColumnStart(e, column, false);\n            },\n            onTouchStart: function onTouchStart(e) {\n              return _this2.resizeColumnStart(e, column, true);\n            }\n          }, getResizerProps('finalState', undefined, column, _this2))) : null;\n\n          var isSortable = _.getFirstDefined(column.sortable, sortable, false);\n\n          return React__default.createElement(ThComponent, _extends({\n            key: i + '-' + column.id,\n            className: classnames(classes, isResizable && 'rt-resizable-header', sort ? sort.desc ? '-sort-desc' : '-sort-asc' : '', isSortable && '-cursor-pointer', !show && '-hidden', pivotBy && pivotBy.slice(0, -1).includes(column.id) && 'rt-header-pivot'),\n            style: _extends({}, styles, {\n              flex: width + ' 0 auto',\n              width: _.asPx(width),\n              maxWidth: _.asPx(maxWidth)\n            }),\n            toggleSort: function toggleSort(e) {\n              if (isSortable) _this2.sortColumn(column, multiSort ? e.shiftKey : false);\n            }\n          }, rest), React__default.createElement('div', {\n            className: classnames(isResizable && 'rt-resizable-header-content')\n          }, _.normalizeComponent(column.Header, {\n            data: sortedData,\n            column: column\n          })), resizer);\n        };\n\n        var makeHeaders = function makeHeaders() {\n          var theadProps = _.splitProps(getTheadProps(finalState, undefined, undefined, _this2));\n\n          var theadTrProps = _.splitProps(getTheadTrProps(finalState, undefined, undefined, _this2));\n\n          return React__default.createElement(TheadComponent, _extends({\n            className: classnames('-header', theadProps.className),\n            style: _extends({}, theadProps.style, {\n              minWidth: rowMinWidth + 'px'\n            })\n          }, theadProps.rest), React__default.createElement(TrComponent, _extends({\n            className: theadTrProps.className,\n            style: theadTrProps.style\n          }, theadTrProps.rest), allVisibleColumns.map(makeHeader)));\n        };\n\n        var makeFilter = function makeFilter(column, i) {\n          var resizedCol = resized.find(function (x) {\n            return x.id === column.id;\n          }) || {};\n\n          var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n          var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n          var theadFilterThProps = _.splitProps(getTheadFilterThProps(finalState, undefined, column, _this2));\n\n          var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n          var classes = [column.headerClassName, theadFilterThProps.className, columnHeaderProps.className];\n\n          var styles = _extends({}, column.headerStyle, theadFilterThProps.style, columnHeaderProps.style);\n\n          var rest = _extends({}, theadFilterThProps.rest, columnHeaderProps.rest);\n\n          var filter = filtered.find(function (filter) {\n            return filter.id === column.id;\n          });\n          var ResolvedFilterComponent = column.Filter || FilterComponent;\n\n          var isFilterable = _.getFirstDefined(column.filterable, filterable, false);\n\n          return React__default.createElement(ThComponent, _extends({\n            key: i + '-' + column.id,\n            className: classnames(classes),\n            style: _extends({}, styles, {\n              flex: width + ' 0 auto',\n              width: _.asPx(width),\n              maxWidth: _.asPx(maxWidth)\n            })\n          }, rest), isFilterable ? _.normalizeComponent(ResolvedFilterComponent, {\n            column: column,\n            filter: filter,\n            onChange: function onChange(value) {\n              return _this2.filterColumn(column, value);\n            }\n          }, defaultProps.column.Filter) : null);\n        };\n\n        var makeFilters = function makeFilters() {\n          var theadFilterProps = _.splitProps(getTheadFilterProps(finalState, undefined, undefined, _this2));\n\n          var theadFilterTrProps = _.splitProps(getTheadFilterTrProps(finalState, undefined, undefined, _this2));\n\n          return React__default.createElement(TheadComponent, _extends({\n            className: classnames('-filters', theadFilterProps.className),\n            style: _extends({}, theadFilterProps.style, {\n              minWidth: rowMinWidth + 'px'\n            })\n          }, theadFilterProps.rest), React__default.createElement(TrComponent, _extends({\n            className: theadFilterTrProps.className,\n            style: theadFilterTrProps.style\n          }, theadFilterTrProps.rest), allVisibleColumns.map(makeFilter)));\n        };\n\n        var makePageRow = function makePageRow(row, i) {\n          var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n          var rowInfo = {\n            original: row[originalKey],\n            row: row,\n            index: row[indexKey],\n            viewIndex: rowIndex += 1,\n            pageSize: pageSize,\n            page: page,\n            level: path.length,\n            nestingPath: path.concat([i]),\n            aggregated: row[aggregatedKey],\n            groupedByPivot: row[groupedByPivotKey],\n            subRows: row[subRowsKey]\n          };\n\n          var isExpanded = _.get(expanded, rowInfo.nestingPath);\n\n          var trGroupProps = getTrGroupProps(finalState, rowInfo, undefined, _this2);\n\n          var trProps = _.splitProps(getTrProps(finalState, rowInfo, undefined, _this2));\n\n          return React__default.createElement(TrGroupComponent, _extends({\n            key: rowInfo.nestingPath.join('_')\n          }, trGroupProps), React__default.createElement(TrComponent, _extends({\n            className: classnames(trProps.className, row._viewIndex % 2 ? '-even' : '-odd'),\n            style: trProps.style\n          }, trProps.rest), allVisibleColumns.map(function (column, i2) {\n            var resizedCol = resized.find(function (x) {\n              return x.id === column.id;\n            }) || {};\n            var show = typeof column.show === 'function' ? column.show() : column.show;\n\n            var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n            var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n            var tdProps = _.splitProps(getTdProps(finalState, rowInfo, column, _this2));\n\n            var columnProps = _.splitProps(column.getProps(finalState, rowInfo, column, _this2));\n\n            var classes = [tdProps.className, column.className, columnProps.className];\n\n            var styles = _extends({}, tdProps.style, column.style, columnProps.style);\n\n            var cellInfo = _extends({}, rowInfo, {\n              isExpanded: isExpanded,\n              column: _extends({}, column),\n              value: rowInfo.row[column.id],\n              pivoted: column.pivoted,\n              expander: column.expander,\n              resized: resized,\n              show: show,\n              width: width,\n              maxWidth: maxWidth,\n              tdProps: tdProps,\n              columnProps: columnProps,\n              classes: classes,\n              styles: styles\n            });\n\n            var value = cellInfo.value;\n            var useOnExpanderClick = void 0;\n            var isBranch = void 0;\n            var isPreview = void 0;\n\n            var onExpanderClick = function onExpanderClick(e) {\n              var newExpanded = _.clone(expanded);\n\n              if (isExpanded) {\n                newExpanded = _.set(newExpanded, cellInfo.nestingPath, false);\n              } else {\n                newExpanded = _.set(newExpanded, cellInfo.nestingPath, {});\n              }\n\n              return _this2.setStateWithData({\n                expanded: newExpanded\n              }, function () {\n                return onExpandedChange && onExpandedChange(newExpanded, cellInfo.nestingPath, e, cellInfo);\n              });\n            }; // Default to a standard cell\n\n\n            var resolvedCell = _.normalizeComponent(column.Cell, cellInfo, value); // Resolve Renderers\n\n\n            var ResolvedAggregatedComponent = column.Aggregated || (!column.aggregate ? AggregatedComponent : column.Cell);\n            var ResolvedExpanderComponent = column.Expander || ExpanderComponent;\n            var ResolvedPivotValueComponent = column.PivotValue || PivotValueComponent;\n\n            var DefaultResolvedPivotComponent = PivotComponent || function (props) {\n              return React__default.createElement('div', null, React__default.createElement(ResolvedExpanderComponent, props), React__default.createElement(ResolvedPivotValueComponent, props));\n            };\n\n            var ResolvedPivotComponent = column.Pivot || DefaultResolvedPivotComponent; // Is this cell expandable?\n\n            if (cellInfo.pivoted || cellInfo.expander) {\n              // Make it expandable by defualt\n              cellInfo.expandable = true;\n              useOnExpanderClick = true; // If pivoted, has no subRows, and does not have a subComponent,\n              // do not make expandable\n\n              if (cellInfo.pivoted && !cellInfo.subRows && !SubComponent) {\n                cellInfo.expandable = false;\n              }\n            }\n\n            if (cellInfo.pivoted) {\n              // Is this column a branch?\n              isBranch = rowInfo.row[pivotIDKey] === column.id && cellInfo.subRows; // Should this column be blank?\n\n              isPreview = pivotBy.indexOf(column.id) > pivotBy.indexOf(rowInfo.row[pivotIDKey]) && cellInfo.subRows; // Pivot Cell Render Override\n\n              if (isBranch) {\n                // isPivot\n                resolvedCell = _.normalizeComponent(ResolvedPivotComponent, _extends({}, cellInfo, {\n                  value: row[pivotValKey]\n                }), row[pivotValKey]);\n              } else if (isPreview) {\n                // Show the pivot preview\n                resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n              } else {\n                resolvedCell = null;\n              }\n            } else if (cellInfo.aggregated) {\n              resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n            }\n\n            if (cellInfo.expander) {\n              resolvedCell = _.normalizeComponent(ResolvedExpanderComponent, cellInfo, row[pivotValKey]);\n\n              if (pivotBy) {\n                if (cellInfo.groupedByPivot) {\n                  resolvedCell = null;\n                }\n\n                if (!cellInfo.subRows && !SubComponent) {\n                  resolvedCell = null;\n                }\n              }\n            }\n\n            var resolvedOnExpanderClick = useOnExpanderClick ? onExpanderClick : function () {}; // If there are multiple onClick events, make sure they don't\n            // override eachother. This should maybe be expanded to handle all\n            // function attributes\n\n            var interactionProps = {\n              onClick: resolvedOnExpanderClick\n            };\n\n            if (tdProps.rest.onClick) {\n              interactionProps.onClick = function (e) {\n                tdProps.rest.onClick(e, function () {\n                  return resolvedOnExpanderClick(e);\n                });\n              };\n            }\n\n            if (columnProps.rest.onClick) {\n              interactionProps.onClick = function (e) {\n                columnProps.rest.onClick(e, function () {\n                  return resolvedOnExpanderClick(e);\n                });\n              };\n            } // Return the cell\n\n\n            return React__default.createElement(TdComponent // eslint-disable-next-line react/no-array-index-key\n            , _extends({\n              key: i2 + '-' + column.id,\n              className: classnames(classes, !cellInfo.expandable && !show && 'hidden', cellInfo.expandable && 'rt-expandable', (isBranch || isPreview) && 'rt-pivot'),\n              style: _extends({}, styles, {\n                flex: width + ' 0 auto',\n                width: _.asPx(width),\n                maxWidth: _.asPx(maxWidth)\n              })\n            }, tdProps.rest, columnProps.rest, interactionProps), resolvedCell);\n          })), rowInfo.subRows && isExpanded && rowInfo.subRows.map(function (d, i) {\n            return makePageRow(d, i, rowInfo.nestingPath);\n          }), SubComponent && !rowInfo.subRows && isExpanded && SubComponent(rowInfo, function () {\n            var newExpanded = _.clone(expanded);\n\n            _.set(newExpanded, rowInfo.nestingPath, false);\n          }));\n        };\n\n        var makePadColumn = function makePadColumn(column, i) {\n          var resizedCol = resized.find(function (x) {\n            return x.id === column.id;\n          }) || {};\n          var show = typeof column.show === 'function' ? column.show() : column.show;\n\n          var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n          var flex = width;\n\n          var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n          var tdProps = _.splitProps(getTdProps(finalState, undefined, column, _this2));\n\n          var columnProps = _.splitProps(column.getProps(finalState, undefined, column, _this2));\n\n          var classes = [tdProps.className, column.className, columnProps.className];\n\n          var styles = _extends({}, tdProps.style, column.style, columnProps.style);\n\n          return React__default.createElement(TdComponent, _extends({\n            key: i + '-' + column.id,\n            className: classnames(classes, !show && 'hidden'),\n            style: _extends({}, styles, {\n              flex: flex + ' 0 auto',\n              width: _.asPx(width),\n              maxWidth: _.asPx(maxWidth)\n            })\n          }, tdProps.rest), _.normalizeComponent(PadRowComponent));\n        };\n\n        var makePadRow = function makePadRow(row, i) {\n          var trGroupProps = getTrGroupProps(finalState, undefined, undefined, _this2);\n\n          var trProps = _.splitProps(getTrProps(finalState, undefined, undefined, _this2));\n\n          return React__default.createElement(TrGroupComponent, _extends({\n            key: 'pad-' + i\n          }, trGroupProps), React__default.createElement(TrComponent, {\n            className: classnames('-padRow', (pageRows.length + i) % 2 ? '-even' : '-odd', trProps.className),\n            style: trProps.style || {}\n          }, allVisibleColumns.map(makePadColumn)));\n        };\n\n        var makeColumnFooter = function makeColumnFooter(column, i) {\n          var resizedCol = resized.find(function (x) {\n            return x.id === column.id;\n          }) || {};\n          var show = typeof column.show === 'function' ? column.show() : column.show;\n\n          var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n          var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n          var tFootTdProps = _.splitProps(getTfootTdProps(finalState, undefined, column, _this2));\n\n          var columnProps = _.splitProps(column.getProps(finalState, undefined, column, _this2));\n\n          var columnFooterProps = _.splitProps(column.getFooterProps(finalState, undefined, column, _this2));\n\n          var classes = [tFootTdProps.className, column.className, columnProps.className, columnFooterProps.className];\n\n          var styles = _extends({}, tFootTdProps.style, column.style, columnProps.style, columnFooterProps.style);\n\n          return React__default.createElement(TdComponent, _extends({\n            key: i + '-' + column.id,\n            className: classnames(classes, !show && 'hidden'),\n            style: _extends({}, styles, {\n              flex: width + ' 0 auto',\n              width: _.asPx(width),\n              maxWidth: _.asPx(maxWidth)\n            })\n          }, columnProps.rest, tFootTdProps.rest, columnFooterProps.rest), _.normalizeComponent(column.Footer, {\n            data: sortedData,\n            column: column\n          }));\n        };\n\n        var makeColumnFooters = function makeColumnFooters() {\n          var tFootProps = _.splitProps(getTfootProps(finalState, undefined, undefined, _this2));\n\n          var tFootTrProps = _.splitProps(getTfootTrProps(finalState, undefined, undefined, _this2));\n\n          return React__default.createElement(TfootComponent, _extends({\n            className: tFootProps.className,\n            style: _extends({}, tFootProps.style, {\n              minWidth: rowMinWidth + 'px'\n            })\n          }, tFootProps.rest), React__default.createElement(TrComponent, _extends({\n            className: classnames(tFootTrProps.className),\n            style: tFootTrProps.style\n          }, tFootTrProps.rest), allVisibleColumns.map(makeColumnFooter)));\n        };\n\n        var makePagination = function makePagination(isTop) {\n          var paginationProps = _.splitProps(getPaginationProps(finalState, undefined, undefined, _this2));\n\n          return React__default.createElement(PaginationComponent, _extends({}, resolvedState, {\n            pages: pages,\n            canPrevious: canPrevious,\n            canNext: canNext,\n            onPageChange: _this2.onPageChange,\n            onPageSizeChange: _this2.onPageSizeChange,\n            className: paginationProps.className,\n            style: paginationProps.style,\n            isTop: isTop\n          }, paginationProps.rest));\n        };\n\n        var makeTable = function makeTable() {\n          return React__default.createElement('div', _extends({\n            className: classnames('ReactTable', className, rootProps.className),\n            style: _extends({}, style, rootProps.style)\n          }, rootProps.rest), showPagination && showPaginationTop ? React__default.createElement('div', {\n            className: 'pagination-top'\n          }, makePagination(true)) : null, React__default.createElement(TableComponent, _extends({\n            className: classnames(tableProps.className, currentlyResizing ? 'rt-resizing' : ''),\n            style: tableProps.style\n          }, tableProps.rest), hasHeaderGroups ? makeHeaderGroups() : null, makeHeaders(), hasFilters ? makeFilters() : null, React__default.createElement(TbodyComponent, _extends({\n            className: classnames(tBodyProps.className),\n            style: _extends({}, tBodyProps.style, {\n              minWidth: rowMinWidth + 'px'\n            })\n          }, tBodyProps.rest), pageRows.map(function (d, i) {\n            return makePageRow(d, i);\n          }), padRows.map(makePadRow)), hasColumnFooter ? makeColumnFooters() : null), showPagination && showPaginationBottom ? React__default.createElement('div', {\n            className: 'pagination-bottom'\n          }, makePagination(false)) : null, !pageRows.length && React__default.createElement(NoDataComponent, noDataProps, _.normalizeComponent(noDataText)), React__default.createElement(LoadingComponent, _extends({\n            loading: loading,\n            loadingText: loadingText\n          }, loadingProps)));\n        }; // childProps are optionally passed to a function-as-a-child\n\n\n        return children ? children(finalState, makeTable, this) : makeTable();\n      }\n    }]);\n    return ReactTable;\n  }(Methods(Lifecycle(React.Component)));\n\n  ReactTable.propTypes = propTypes$1;\n  ReactTable.defaultProps = defaultProps;\n  exports.ReactTableDefaults = ReactTableDefaults;\n  exports.default = ReactTable;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":null,"metadata":{},"sourceType":"script"}