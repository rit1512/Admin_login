{"ast":null,"code":"import _classCallCheck from \"/home/apsit/Desktop/distributionManagementSystem/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/apsit/Desktop/distributionManagementSystem/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport authService from './auth-service';\n\nvar AxiosService =\n/*#__PURE__*/\nfunction () {\n  function AxiosService() {\n    _classCallCheck(this, AxiosService);\n\n    this.axiosInstance = {};\n    this.initInstance();\n  }\n\n  _createClass(AxiosService, [{\n    key: \"initInstance\",\n    value: function initInstance() {\n      this.axiosInstance = axios.create({\n        baseURL: '/',\n        timeout: 5000\n      });\n      this.axiosInstance.interceptors.request.use(function (config) {\n        var token = authService.getToken('x-auth-user-token'); // if (token) {\n        //   config.headers.x-auth-user-token = ${token}\n        // }\n\n        return config;\n      });\n      return this.axiosInstance;\n    }\n  }, {\n    key: \"getInstance\",\n    value: function getInstance() {\n      return this.axiosInstance || this.initInstance();\n    }\n  }]);\n\n  return AxiosService;\n}();\n\nexport default new AxiosService();","map":{"version":3,"sources":["/home/apsit/Desktop/distributionManagementSystem/client/src/services/axios-service.js"],"names":["axios","authService","AxiosService","axiosInstance","initInstance","create","baseURL","timeout","interceptors","request","use","config","token","getToken"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;IAEMC,Y;;;AAIJ,0BAAc;AAAA;;AAAA,SAFdC,aAEc,GAFE,EAEF;AACZ,SAAKC,YAAL;AACD;;;;mCAEc;AACb,WAAKD,aAAL,GAAqBH,KAAK,CAACK,MAAN,CAAa;AAChCC,QAAAA,OAAO,EAAE,GADuB;AAEhCC,QAAAA,OAAO,EAAE;AAFuB,OAAb,CAArB;AAKA,WAAKJ,aAAL,CAAmBK,YAAnB,CAAgCC,OAAhC,CAAwCC,GAAxC,CACE,UAACC,MAAD,EAAY;AACV,YAAMC,KAAK,GAAGX,WAAW,CAACY,QAAZ,CAAqB,mBAArB,CAAd,CADU,CAGV;AACA;AACA;;AAEA,eAAOF,MAAP;AACD,OATH;AAWA,aAAO,KAAKR,aAAZ;AACD;;;kCAEa;AACZ,aAAO,KAAKA,aAAL,IAAsB,KAAKC,YAAL,EAA7B;AACD;;;;;;AAGH,eAAe,IAAIF,YAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport authService from './auth-service';\r\n\r\nclass AxiosService {\r\n\r\n  axiosInstance = {};\r\n\r\n  constructor() {\r\n    this.initInstance();\r\n  }\r\n\r\n  initInstance() {\r\n    this.axiosInstance = axios.create({\r\n      baseURL: '/',\r\n      timeout: 5000\r\n    });\r\n\r\n    this.axiosInstance.interceptors.request.use(\r\n      (config) => {\r\n        const token = authService.getToken('x-auth-user-token');\r\n\r\n        // if (token) {\r\n        //   config.headers.x-auth-user-token = ${token}\r\n        // }\r\n\r\n        return config;\r\n      });\r\n\r\n    return this.axiosInstance;\r\n  }\r\n\r\n  getInstance() {\r\n    return this.axiosInstance || this.initInstance();\r\n  }\r\n}\r\n\r\nexport default new AxiosService();\r\n"]},"metadata":{},"sourceType":"module"}